#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 87c119f6-c03c-4157-9c54-fa72a168f812
# Source File: ClockApp.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
rx8BAB+LCAAAAAAABACMvNeO40q2rnufQL7DxLxlY9GLJLC6AXpvRYmk7uiNaERvnn6HqntdnbOx
diUqK0siKUbEGOP//ohg/reXp8OWT6cQL/Ff4Ie5Hvp//o39/a/fn7/++m97qsu6j1upbnMr7vJ/
8e2QvtnP578+c/Hf8P/n7X+flDR5uvy1nJ/8n3/fz3nJu/8K6j4b9vm/pGHq/v39H3/9/731j7+e
/7kH4r+Q79c//uLXdlmn/J99vi5T3P7jL2dN2jrV89Mf3nn/z4SiYjIlbyiDEzlCM3//1YNb+eff
Bbgez4N7/fuvtKrbbALH/s0P/TIN7fzv9oGbdabhk0/L+Z+T2HUZ7mnc5uaQ5X//yxr6/L/h/znm
/3IOF6dvfmiH6e9//efy/0+nlNOw9pnaxWVuxOewLuD0vF/y6X89m29rcOC9vsAdkvTtH38RNP6/
nvTtXm6Ysny6L2cLzpTqI8/udV+2/3sT1XTo/6fLwLscGPTp/BfLshzLiuy//4isyvLkHfwkleCb
2rr+O7X4atC/7wqPVvUklf3P8eC8Uv7+ECr68ALH//6oLKd5ovTItWspwpZo0/AFb1iu3Q/tZId3
qOmScv9w0iKW9b4xziBFC4+7eo2Vqi4jcDuIRzbeQkmTfn8+yev5HFH2kzytBydzkRz6rtXppxMf
vOqKb5bVVF/iTqvL8QOuunQn73dB6xLn/bKpqRu2ve+drg+L/PcnL15938gqbyKZx/qCyaoQV92U
Ewp4BOrEM3Dvkx8RCks8pCq5r6HTp7bCc8/zlrFd+4kfg8437Oexhr8/D0m7lx/9Ln7uQTvq51yp
WLdjz/YV7BiE1/DOulIVy1KNxrs8osM7MKSyNHjEMdoa8SQvkDqtjA4zBC1V/QiTxu4zRrXZiB5d
CPtdPGxS9mLjk5J9OrVparSpye6C9rE/R7Mr+XJLxP48/BK3WNYwWK1Sa72yf3+imp502n6ZWDEw
du/bivHmxVtqq7IhnXANO/1lK+EoGRRFNUu6hZ+naNy3KHnGSPx56sRdqU4TtbyH9vvDu+2A3ojM
7ou1kW5MXosf3W21+6OVu+u1xNsZ9Ec+qD25yk2ugEiAyoZ+leK1L4/eJlajphycYgiaBKPgsKVQ
IbfKdpQGcsTaMwejvkF6JF+V8DBdrHzQPT7Jb2a5TrJ4w3A3Z7QaBVJVq5DjMfkaZnJ7PzL694fC
t8KF4HzLZDxhmJCAjPrVbzkOtQg6vqtY8gSTYDt2psk26r1EiKni+XIfIqc01cUxK56kucCy3n77
/cnYhoSKdrc/CAp1D6sstlNzjJgaEVBZ+71QcUsik918752Igg5YeCrDYIRakCRjUFTCJ+Smyo+W
u+O/P8Kn53J5kLtGIbjPwEEsT9cSskr00c3kEofgCvTWgDtYQ9JOumjObSWr8eRg9DuyTIwsgoh6
cqfrF78/Es9enHOjrCEKQGQIi+EiHz3vI6beo6RhmGXLLPbeI2ffPbRZ3wapY9mJ80x4NHS7HFQW
S5ibiVtH+vuTWCsm3MGQKgLVB2JkapvljkaoLV1if2o2SNGe+CTeEiwhroRh6JW3jG/WrchyjU97
npj6NXt2ZfsZfn+4lW1feh5MFtWDDvSrEknemu2XGJ4so0ysUkVrlUnDVERubuYIqbgLQpkKU7Ed
ZqFEdO2qXkmm9V0G/XbA66sed2uUX2VRuILOe5G0hNnqPiUvXM60124JM6L3D02njzAZB+ZOMW5b
CHlZdi8SaQKh0+qo4ebfH0xgacjmBVloT1LLFoyKMlZyDz8qBMKLGMQ9K/CKOahKWaVv41qlPbJA
jL3uWR9haMyktXEyTqHlr9+fknE+KOsXrsEHnMlZNlJZfvoQhOtk09yRiYgAGSUQ9m1/5sLnZQWE
ebmgfz5E4TMb9M1Gxnz3PSaArK+rMNrCFYeE2/R5Tvd8Z15dO89t9YFKQhQ4zKAhRyF2l4FUZ5ew
5hhkwRVolU/fbva4e/DrjcM7IUogehkGxefQaO+fncr2G7vinyLYK9M9sGi2w+GugmrmcxgllTSz
VM3qhEGwI2wyt89SiKzbcO9JtMPH2X38/qwMiNRK9KLUlgXfA2dVI5aoLQvE4SXEyQnK3BsTI+Lz
WeGuk6OX8Er42D/v93UJrtd7ji0ZSROr28vfn6Kj1/a2yStzX9bySbOmEijsTYGs7ZPxKmWTi9x4
H+k1WS9DuBvHQ+3exNvcD3ZBWN/DtYEmz9iv73sA+g2UMCw4uwf4iEf4wqy5Ew2KSfD4E+9s6o58
tAladN9Ebraq9Zwp63NqbJUMi32HtzIZ9+dp5bLAtfzvTwBq9mFDweIvEHUDCev7785VIUxk8Q9j
fjbHEyvtTBVjoqhpmQz+Y0Ei1qNBlOOK4zivu/9GHLqvEFB7uWO3KyxiS4+cVT7XNFf0VD/F20s9
zfJe5bfxuTYBc6yQi9+sStbu3vshJQtGtMUKVTcOdgWblUXIArUX4kGO6qwmnpG6j4zVZPclTop4
MeoChq8+sw2RT0XVMQLuIZt6V0qulGQ9MULDaPLTRJE677616CNFvz8GFy+3ISPeZEu5b5Xfimkc
US8P61tUyrttDWlAswrxhhuSup2zYU/5liwRL8UT+kAE3nHrZ6a8efVZ/f7Isnt23vRwFLq42Znn
+PmZZzmT48UNpWDIS3bIXR44YbVAuorB3AXy5UUPyeKb5iLGcNrTq5v1g4ec35/pSvilLWfrdRTj
Z9JenEYKzPH2KmVYg3426c6MQGvr0L8x8hv3Fi7au2EUo9g9d//N7faIvPXlWc+AQyJT5rnC5/kT
Klejil5qirbxzlzYQGYB1jOR/4zfzyjg6hmcUau16ioVYY/MQ6/pBw/+Hcn51c17t4FcMJ3KFZ8S
dx9GffC1w/r44Yu9tNebJZ3UpQwuMlStxKjXUkN5URyU/0FonDW5dSE2hgvD56u7dF56g/q2W4vZ
HDvpzjRN70cwoYQ1qMNwe5t0GXn9lFxx3b1ZV1+CyWMLhYBA3oJ7vIvcdyxv1kma/1afr2YFi+i9
v9ig3olcARq5AmUAEWtXxauuT1RQTRYF9UyUvIcnQxBEUK2WhwN10oqUb+H7CRXNzVYuCEQvf6Qr
4VwkfVUXWZ56PXyLyYgGc6FUvGX0MiteVPhK1CRLypRtOIKRawiGBQ2Awac1RdM4IlRW0xSMAqXE
1Fs+AXNAHZZY/fAnpiqcnN9J4+8a3rknuOtVWLBb9nDCqcW98Wn2jN14LApeE6UzbdQ/owMUsEo6
tMBecRaF2TRnZB62pwk7B935Gq4gN0l5g9cq6A9YTNOEKx9kfMS+Fmm6VY2q2ThXdHlEyIKKBJqm
p1Bhe8Gr+yzVIMkfU+VdkAcHFYAqExoknRfNA9wPPkknKb6F5z6CvNuGZLkj2HV9bl8muYuo9fvj
ZRDQPQlUYtaUAU70/oJ7A6i3ARUtWMFdy2e8bZLtpbBTBkNHiB3R93jucw8og4iU3oyTtmAYrnIK
jCkEy0+UYaonkIvp/bRe4SQDlXd3IUXpMzIDe88dpR4T+ZgDOKHCOPL12I1ct9pdNhWG3KXtLZhi
G2gWoMD6ZsmNFU8rx1oEES6jWr41/g81zEdmV67AEbQsoDdG5JDM8JMEez7DmGAFp8IXcqaTN4z2
6wao5ryXX7b0VCTfk2zG/pDLVgCKqXYiMojeCre1HHWunOip2m3uDxNJJA29KlSvPK5htrtTiuyK
AQVkjPj4MEmV2sLnQ9KB0iLkwhXDs53rem7fw3RHLG04oj1eQgrKjfZG3zUSEBr6XphNI0LeRaD3
u6WX5+8Pcc0j8mogEnRpyJPn+rzemTD9OQoPiP7DWC/iykAiBI83aQkmlpiDQDLQcleT0jNuTeBo
9332pTP5/XHCGTuDFaATK2/ym1MQrumo80MwJ5nCPsvuELElXhn4Zx5Bfbr6VvvqkvuLZBhvYSDo
hiQRaJrxVvbfH188Ia3/FG5PyK8uzgVbSRIKaq8LAIP+sjokBqX+eXbnQq54AIyVUTyxly5c184q
+HX5mfjUUF0RD1B7N5JzuFesFYzd+a972osHm4oV4ze6F8ESoJy4PQ4G7oXXiku1cJPptx69Y40M
BD4JLBx6nnyMyl7fAia3AzyaVRmkUct/s12EvzX9U+ZJyurCmwQfsWBvT0S9TtxTVXQBzZ56F9/J
aB6AVUlZjf3mQvJ+M4CRnmXaLxq0AzNoKTBUmJNx4lZyA9Wgzw8sp7B3wZcnC3I398l3Lxzke02c
HqEFrjz2jrHYrszn+lkvvz/PUmO/dW1RmiMajel2SZFZVkILBAvVoXkSve41Jsnw4Yq3QIcllmLB
wxM5EYtMVQZlp+WBJ3tGbxFkFvB2OJoQn/0oujrfqRRQKIiL9nV/MvDW95ai1J46qjUH+l3qnH4j
hOIShS5r++/YLsEW4lY0LBh7AVK9jmRnMxfH4gt7cKLO05uHvOSqL7XtXVHTA740ZwfVe3LfCA3d
XVARFC7BxAuRS0SI9+j8eiFPsPrfn2t0wZGjmidZPLnKJdJl/AJX49rn48mWnWgegHJyVrixUJO0
49fEfOK85/e3y2th8WCezv3RVU+UBGNahY5ax1V8xLAxLfmgoI0RCbQ23PiylEgICp46cHAHspfA
Sh/vjeZLN7IHYHHZmzGxSHmx55lsOKhsgN+SbRfn2Vaf9MU6b2ie/Q0zxOZ6zXhDjEZNhzwj+deS
e2HFDCBdn0YLNSiKQj0wi28LiVxeV9j4ZvnA1yM3pCgWTO2G+HhEvFMKjjYutu9cEzpiDWZVER0Z
DBRqpHQcRss0UaANZIpFVh1D7VbArPp4yt8eAP32GtAaA7w/uxQPlK8WQuHrrIMpWxVPlLbr7QKq
eaAgvnsSy4yoyXHmyJit5Ac1LYpP/dXXTqoIcG/bJ0HgMpsCQW1sZUJ0AT9P3qob1+NliEfj6Rnr
/kx1RM0Hh6lCLEt39NaKVRtgWf8qS6FdO1Cq9O78/ekzCDjV4kaopgNG7/KtxKMFhsCb9hYZzuuQ
wedvZZXlVLpmL/z2oDuRA40tR4sTVxUxTKlghdSxNxTw2/MkHuI5OOROXVLzpgx8pxXuRr6e4XcK
Akjl+BTh5zjdcNvlq3Pg3uwIb9nVmXfRewDQlSfqOuu5BC01X8Dz1c5e7byHQhdfuas2ioNPAyKb
4imrjf4hRYPZDR/WEeoANtfAAMlM+6bw5kNplOQmtoH3DnQP6IKnyZrvCqsgxnaZ5/AgMzlc3L9H
4fr92pj40ev5ntntXR1HXeiFQHU6jc2uwdrFvqgI9Q6TUn0kIHr7onkhwOGgUZbMgS4FIg89txRl
qfKQm0HpP6sn84CPdA4oz/RUxQM2WQXKacB9D/8tkwwbwbOhrwZgy3OeThmWL72uFCmNHQWBQgOl
Ax7p7Tu7oG65PE+1jdqTKT4bKDTU8mFhAuMo0KlDRR+st6L2eAO+Begpq2/M1zNEy9o6J/ATJnb5
rxkD4pIkRCsRZMd9FgVRX8tOQ4XzuQHUYA16IWQTxT1QKGvrpvKwLEqgvjH7e6AT533RvSZmwD1f
PR0I4YTe6ILKVpBd9eBV5E0XDXuBs7CPpJJVUxOLOqqAGei2rPiEVhdcqYAGL9YlfILzcdZ5sm+K
xqhsk5A3lM5Xhp40x/6piuIaJh/R4z2MJB5jMidpYM8a6nfufFkvmfqWJA1QTSfw1bFM++eRsFqX
mb56qYD6Ab0sy6CTEIuq90ZcCMlzH4iB4/iw0ptwRMBnFNK6IwJrBePxwLodBS3FJp9TYJjwkDN3
rHZxdFGHiretNKcKFxtOMPUREbVWp9KyMJiMYRCsvGTvHaty2OMj3DzRU3HOr7cANPigIeh+h+Di
lcwuwUHyvqQTzn0nrYDpPLm0184IUOpQSADqvB5ZLSgyElwvj/czezxVFme2yqfHvAUVKZPDECc1
T3rekSC+qvh6qKde0WvSkplC0LmTLYtfr9uHut0wPJ113cfVrCxxemt6ACF35EXT+Q0o7+/PgpbT
1kRabiIOsLUqxaumZ2iuq9bwPGn3xG5bjTg3sfGI6yJYucnWXmzGMT5niZebB/vYKBDXC+qAqzEr
nnW68oxHvOLAkFM443icf09po8xOqBfJ/NlmklNsqj/EE4U1verzbKMS9hpOyNixvKSWtnviFRhT
AJTPpqgYK5XOQoGBlWjXXoAf+8NLH8DiLAyItV16XmMRk+1q1xSg0g14DCW88Yj2DEiNUTWz9/HX
l5EoylRWH+1e3evu+bqg8lpBd3ctN7gibrszxJ3Ot5QNMCYDq1cuyjCdRgkT6BilXSMAsP759B6i
pAy/P2K/ZG+rkHuhvSo2+Yy0W63x8GAlKb8Me3zzUBJiFB/KuP95I7XFrCGHbHq/UVOelTVsPVJr
E1RlZQAjARzV2An2CnM20hTUrof3mB4PJJuocRyWfcAHje4KaBy3sntM5nWigM8+p3soTg4Beg77
tQ0Gnm4J4GUuKMLPArYsBlJvEzZqqIOpCfuOme7U7miyDKfaAeorQiqYscKp1/HGBDICSxQwhFkG
al6xVHf9knwMkMOfM454kZvqU4fko6vbj35X36sDmWxGyx2zhz40nlCLqI15iftD4gKyktpHqZas
+6Eq0RO9Eo0/z2+eVocKWLu6wNWSrhpG9Q/zMAUB9VDt9yRcEBYkik1p3nr3ZoaAcnTw6e5UEbkE
IP2qcbF/RtKkgZbSsILqrX8kHxQq6remAc1ngdFb2j5OsdhKuHjySUpVb0u2Ni7rMcD/KesGqhEm
71j6dJ8m0XecrgO3qxSN9qUsp6oshHC0l2pYLwAS4t3Z6TQt1Es8kBwjUi0sVUDizxr0fIsZOIyv
GXQPs3iJPwU7k9Sz+6P1cdwMjxGB5q4PB0SU34wfKT7OZJEToqcmNuqaM87m2DTcJDh8C2ptdHbY
k9+mLUIw6HbaFz0hL35/wBihhmWrPU/N43lwPVay/pj60jBL3+nthoZiy53ZQ+z2j1Y3XYp2Ngf6
Wc0VAmNg6NhujP0WrnG6//7E3PHYbla5PrMm4kr5OylAKREFbf6nPB7Ts2Zr9a0PN/3DeaIh5I6h
aX88akBOQk/ty3GHS0DZcWeCMf1mFEHkTj746wGxs2XFCwg14aII1rQVYYfJRbpZuyr4pw1R1EW+
X1jePOMlSIUxcxpRwTiXyDcXZJYJYqjf45GLq1GX0z+trDqpRGJNWhSjvU/ZhbZPPvuwczC5KsMA
HCYFesjriG8fyCfM2uX5qRZmPn5/AGmphjQiPCCTpvuEXDLkbAKa6zRluUPAm0p1VEFcXFcta55k
U/3PbMfOQqK/WPsh+E7zJQ7gAReGDnGpbCydq4VCl81PYVTu29dAWO/Dsy7SZXqUgXrnBJqyuist
mj0qDKlq2lYQeSwMgHcYMIA/egQiJIiL3EFfTAh/Pq8UeNQBsTXUJp9HBCJ/ldWIWxnMBm6ri9Jb
ageUJy1Pc5f1YwByL/CH+3Rn8uWeIOv5EOfKMkTOe15A5rW+SKumV1+DLHwr6jxVyYmwil3aL15M
lQ3DgvTIC+3dw4NwydHlbP1bPA/grgQCjGkNyo48y7s+6lhwAcNl9TfzEYaHHz4j42ncCr8OAX90
ivauw9qpL8byHHdkQaASUcqGTd+HoE3LDq7Wk3U1lz2zl/NGOP4Hwe5HoHnAGX8Y1qRh+PrO3wzi
EI/iGdx5PCCVoB1ivKeoJBBly0xNh8DL0j5VQPjbtiykHLRr5Gsz9yrnUDrCBoLy/MmsCPo16can
sV6d178Y+3ylsxjF03u1dy4BfSm8ojWMBizJJnBvBm8ZoLehSO/NW54tX+2fu9BAgNOVbwFf+09Q
3vsWOOnGvtbkKfqh/EFUTU7v3yx7Ao9OGH3fVzbI05SO7wvEKyTdpRZGg+JcbAK1ZUavn0s2FQ4v
b/uDY8M+6+ajxdYDZ6AtFDalvw47HTuVS9CFQuEPCfSUatp0DTUJMs3Y3nM58u82m1Yp77KB8fyI
B0FkJTIllal0h+pq4sW1Z3Wv0qBEEpiNBS7idtMlXunwAL5eG0B0FJ0eFa/mQKjjXfT5A92AtFfY
+eh98va2GJJw0cPnE+claJtVTSQDEcamRllqCXeeK/S4F7INVMsNgB+UXsXOspujyPJVkXTtkSut
2PphsqxE3m73IHVwJu+Ke4iGN2Un5GHkwXhRRDon8uHMK4wuwv77wwGqnNhQPOZXfcv0dlj082xC
A8Iuu78gp0XJ25lvECCO8znbX+DQKQrHAV37bhUQ0wXThAvzK/35AGfUDgLCltgpnqy13xjYMQyi
sZ8xGeMxBYPTtmjpsOS5k9yENn58gxitOrkRuG1cg/1b6gOOMg9guJDfn6TIJotv9/fCAjvXGg1H
w3hdQKwek9+VV7araZO68gFTefJ2L/wLZlorXsN86wTJ5zilopIvIPsc/PsD95c3kclNfiPcJsUv
aSFpGkERiiEz2wP+0qrQG/Oq4GJCD1vBq1HjVEzTKMW90dlnmtAnSujWUk8wiBA8p13JC1oLbgeL
7/Z1hniDjzpuBsx5uwifC9+zzdN5YYnh+xDiROEElmWd7dpdZjxf0XbOHH21pNj8/niQ1jvw+sLY
sxoy8bG7PjmTMCPoltw8dSgkWAlwptVR0ojex8O/sVWssRqolUhkijwrcXFMMFZdfMc0Nc+Xuecs
NPF1NURw5NVyYJrbVrj370xpq838JIUmGF/4AYxnPkBiEhGOA59u2lvX9/h51b1QiYDWjxJw2UAT
R/QJNy+W7XYN/D96fgbhlUhxoOUAK2Q24qbXikfDn6u89JffM3AYH/dzSyQaClU27lAwCvja+Gto
9b4GXnxePiI341tu+68C3iy95aEDW1ENdmUMCTz4YR9BdB7kghk852w48sAli3tVjRzFwNd/o0Bt
1POxvcU4KEV+U18sCfzAq6Syk4jVMZxYiJoQhIaPKLLkY3xz2d1gffaAt2ArjsAWpPDewxtwRrcH
A9cVDENmWh/P8mJV1GWblSjge6NAMhgh7PMoc7wXtouatq3uNhQUVPSxJyyyweUeOX9UAPTeCNhS
uYnfOQbgU8RuqwWWlvJ5Wj9lVqBA5+AGaoZYU+Kp0xkTwb4cHnM7kQ7OoN/CIcFWCILOG/BhM2Ck
mg5q1ImU0kzzfL9AUBfhWoAWutiqZfUSXJnZN/uL1bwROWKDy/I1TJ375zFzqApxOCnEtuwd5LwD
fwrw6dRcFkVaCKuvD0ap5beQ8qGVAjJu8MF7nU3EgtdKXvEXrLLQ9XkmCCjh4fdUEytsVJyN0XHs
3595w/Z8e469sOD+1C8C6jkVS1Gx7yqzjqz8RT7Vh4ihNJTZRPEc0VRYjZ7dVjmzM2s7ouEZlozL
jQv/+6Pf359O8D6P5ckWmnefdNFLZJ4H6fsRv1sK+qOGRjKaH9qsJFQV2NOtFHrl+iBUXBQr/vgI
Enzuj1sG7s17Hqlig5gigSD795htS/YAuhXl02PM9ZjvObX4npXVZAplgD+tLWZV1pUAHC+PUPLw
9XxR8GF6IvAyjqGqOz+aNxu54t4LTaGjtuYgGLly97ytmGXHoROPGE9eqcfJqqQnVY8nANPr9cYy
ByPMwBlg2BEEEG9WfQwntUyZOO9esCVT30rNRdOmyaI2tkQPlPnOXOn8MGKzDa3MGN1v2OM48Ddp
+4iDh2MrbUyKwYBDZJz4roLsaa6JE7yBzKrHN9ueyOhpw+ck+BJjRcI56U3fgZW+wW9huWYuZnZD
XdN1egJYG0wCirLw/ftTgbquBjeGeUYZw2TD8uEdCQKDfGQQo5sF++Qu5gOboQDMLm8dDgIvw/zK
WZZoZTXmvmsu0KobBu2hoJKfUih0hrPByS2+PNxkEfBu3bDcCPUUvc6mDxPDvL01qPDx54dOniPL
8nuUmnKrxYE+bIAqreM7X/z7cxcZh7sJ0EcyrSaO5M8gUtRUCre8/yTVh4ho5Y53OzZQd0TiZjwp
Pdc/0xK/9l6j88VEg8hWxDqYPMC9oEAi6MITQkPtBJbCENnd4eZsssdlLL4cyHXMnoHHf2cS4TyF
4UMW6COe4QkwyxEBEb/N6cXG8kSCCBlU2h/3eeZsCIbxG5IwQIVtJS/bEJqeK/6V4VL+GMu4ccAx
lTSUWN/xfXzi7KB9CBFNR/Uf6LN4f+eRqiG2CMMgPW3yGyow2kq/Nol4tJZvfgsGK4zIYFlaZes1
sR6AuAJWCBo2IPEoNswrRVGIovG3YAJ+O4j9ReBPWK4mlPNs6LubaWnicM6dt0m+Pc7Ry8eDjh9J
3yojkOV5gl9EJUZ5FPzxOhiQgTeuqbaXARokkVuWqlnGHN7tZBFLunP1s4R8OSm2Hie+czDVHfQC
p7efOFCbgZRximTotGyaG+f0F7nKpVHCcAhURmjW8qz66Lu2R9phq6cdTBQ9oAUkAQVBVwbIakI8
Me6dmtx1Zd/F2gVZIJRiuV/fBcydR+yqk9nX67uKHfGuBvzRwxNfRpHcUxv/Oh7ghxHSLL16GHVx
hevXChk487iu6xA80bWr03YbRhy+bmBe2vl7PKDBbEC75jlJ0/OD3JKAJDC11vnvbNALtl7rQjoG
6U7qKiFrC5LhMg9zgYvKcPFzRSG4aDDPs+e3thve70/2uB1ZvgSsPegAUno4F50CqtDwAGO96xOE
xpMEIiWZAxD/zg6t6waM9bYRoGpV0rgx7VzNz9p9PIEz4kKKwhhaBtG0IEdrkBHQh3fzyl/zu/XI
BkFvXQwrIqw/MkBvD0jSmv1Bid+9QbgCCrzLIZTECEZUggjxx8Kngnv6pVGWBg6SBiqSLKX12SSu
uWMMidofuuKtV2sGRrWrCbBDn3u7CemDHvqI1fi8H27IInjtl2rUw/Ct5aSNTFOg6rtuwKxwISC8
BaeQsAGBgw72Jcf9rLCiJbixculHoMPJd6qPoigk9C+K1OQdA87orKEHcGtv2loKuDdCxPPkKuSn
SypHj37JETAt0+yUQEYquSVhmGK+a7/a1eHH6cFEWnsqVYGEU8/fH3AgU2wwhe952Yd0HM/ic3wj
nXhEWziclUsU9VelK/pZiynVd4QS3qwbk+MApkWR3V9yfTX3Rm9C4ChN9ki3fn95gF65SIitSFgw
KhUesgOnWNl81+W/85cT9XnxcgFxqV3z3501xOdZfJIAKnoyt+uqurjvLGjjVbdrTpsyzprOxDoU
iFHUgcKhHcaTK+sMOJcL+lNbaq9nP6nKlpxDHw5KsKVQ7qoohAuuTrkz/f5Y1PXd+eUtHZq8stba
o49bTK+SDdcdi/ovk29ESlAU7SsKTs+Wqsid1vJy+eKyejCuPlmwTvleFagMqt6MxdsxFrnoHjJq
orugh/5oXnbjDulECfJr8FMW/+5E/P6dpXFZgV0FlHaZl1TtpZeuCst91wJ/f5oXiWuDF0zPodLu
Tylk53dgI4XZ3dW5IcmiJHJHbUBp04A/Gbpt6UE6bQppF/2KY+QccL3XVhHATwc4o/pcLTcFUFMg
HAqs/y2EvnmLGAxcnAfICI+4OgQLbtYJOz3uqS6Isd3fwg2XllTg74mtPmxZ5fcZ5IL0JkSW1fly
3Is/UMihCCJ0grYzn0jlWJEb4/pzY+ySU4XmoZOh+55ICBhGevbsl84sAfCo5TF8ievP6OICRknt
4apYeiyrm9PtayyF/YbCcND2M/7cdjjcvmvhdu+PZBjMM2Z5uP1BiMwuXdYWk5HXTOCzxnKED5qF
tmSpAUfe2PgDU/rl3Ryy/Fi377zSApCjnGWBgyyngEc/MJu8+txfMiuUh5cVB8tAtGqXgPDf8CcT
Bk/xMAvDbpQQsTF3TXDf9UxekSLq2gXQS76UPkn/QiIhFNmzWbGy6jlnIlZpvn33+Jas2AIFdJ9e
6T6cvn4+IacWsPaZ5aADIQpm6m9OfiOCNXaj8TpZvaugqI7oPusSDytpStNags/7JqWkP3991gu9
s3GxfV0hO3WQapa78N3VQYzqCDHM21wVDMPoEL1c5Fbqm52S3oKWM2QzMEwsoCK8lQ3GlwQJgt+f
nkHXhLqz0Wz0k8lz7J7VXwUGXLsELSexroCrtAs6rXFvdi1rcEk2B2D1zQD8IIT0Lpw0bH9WowFZ
fztmFn2ZkXJAzpc+WYY1Xd1aaV17B9976xRveD8iqwPOYIPplMqWlUAkCeLeL0gHqnMzjOcKmJD4
zjkcdwUp/URewyOzqVQulIMOqHATAcL6IojDQV1Ngr0+BMOTm/UZfVragYgDh3sXD/OpJc7Eibe3
lYJ7AzbWfDWW3Ten1qi7CdtquNEC6OusWp5TlU4dHXycmQxTQrEbb9izYEJvlh063aCEE9rdOm/i
uYO8g6t1agUE6d8ReXPGoACfXzVWf5U8Af4CoXjzro3K/Z3M1pIbOgfbEP9i8X4NTjm+5BAGKsXs
JInivz/Rdy9PalSvpEhkKMxIOjI5loOYeCmir28BSRMNPuhXfj5MppweObCsCFJszR65QsgTOmBF
pk2dGviFEGN3n7rLMCSda8AfgcSloXr2PU7GPTBtQvPZdnmzkqkAJWFZdw8ks5ibig9YCaBWsn/K
vHPlwdBADcm2T1LyY+Ky4Rt5Rym808F1+8ipKOS743DcAZcWBZNCesud+/rehmlXtvTIViAcTt91
WFNsEx7B/Qp8fUTpvOBfMgXUgEV53HRL9sseIFu6ira57+4i9sk37HfmbPJG9DFGrIhWQ/OkBbRv
jXOedgzk6bGCrFf8LTDirp/dNe3Dc3Ye35R1XnMH2jsP94OnC9daHmh9d2ZsC6euec3j437MD9B3
FA3dxw6U3eiuf51RX2i3WRTQ0nZq4sOnPXBJfgzqxxhsR2BwnzeWmHLjqs5FXjgdEHfChq9HIA2L
RHGCeZoN+90b/V0pAFpvSxOvvJLtpPZOs/038njv0rY7dtGSuZICz//W630+tMf0JD3kWptovpvA
segPZuw9xuTuvdsi12cngZcRgMlkicIpzwnNx+Bclijg9wCzUWyRr5fYwzeEhPbXjMSMfb0ehI+X
dYBRO1Krp+21miu6GsrC+e2bWbgAwUob8eVspEU4PoHTfA88Oy6cFEh1hF2BRZZS8GB68MNmYQZK
WRioCkOY4tLpvWUbx46VtrYGXK1nKfM1PwH3YtIGX60BgRGnmFL/7OhNXAh003zBpYzghgYa7751
u/MP+ALHQ9VssO7n+0TALC7Px4P7rnhmm7CzNa4bF/SZlc4piXSnWXi7egdzBkRX1C/FnzTgfyYN
5w1dQf5KyWLCsC06mAGkGp5w6oRBfZsTUOi3SehpNhYX+zFOgNGnOfvS+6zdg7bU2fegq45QYaw5
hZaoFmkb5gOSO8T87vvD75FJfCFAqH9/xHK+Oo1gcsiwLAYWv0DoPu47BqEWusSw+Kq0bMXj57OF
e+5AoUJrO6M038OoRXt87z7TmD3p2HcXQFz6Ct8/j9XrPze71/Y0TbGE5kgKenXcpZUHey04Nfs7
kToZU0KiOVVRfR8qweV7n4RkMtPbO0qiulKAXCgx4EU/wd1pAl5BzsdrMl/SyeQHZzmOKs8Tfxz+
/UWD7Ma+6zHfHekEHIbhUSivK2g/GiWXZRfE0YcBfsGiHkHOQgaK3Z72QyBY5vF9IuM7tyQOXAAj
ZpbW0+bAMOnve2Sy3Ct4trq1sSwaxMIJhfxH7PxZLr4cAhTfpKOl9YvH7rsP2es+uCG9Hq12v1zu
oX73j6kp6x7HmX/3J7GH4ziiqPQUEb12MkVikaF2T+cvkAtUGFHf5yNoJwfeEzXak5QK5aRPvh2S
WZM01ykzyOk46S6B+Nq/K086hPoqxbt11lepCYA41WZrdXxANRcsTTjMxMdOZe+DOKy3jx+Nqj7U
ei9N0HccSUNx9VWVfTpmodVha/jzrAe4+FUURZ4BMjPuyAL4bRzPmdMFm2NLR0CKBLg1LubMsjX5
PBu357fW8Q3gT8siCFVUUvuKzLv82hTJPZ86/F2JAqWmZH0KtJTkLOTGJBbl1RtZRuRKRmiMPpEs
x2PrWc3AhSRXsi/TsefKSKAlxwrKuXvfZ2jC7+7oDPRQ88So5fr8/jxbyuioUFD6W48QHSA9IpmA
J7XL785f4eQ3j3y3j66Ux9vX65nm23TVR0CotGmwOOyK1Gi6uzD92UtgD5GtRCPwUKk+rO4eivbb
IWdjE2D2Ft5rL5qD3OnblpJIGgOfIHCsx8IEPiOZ/sFy306xjkYzFv3OYDTbjL3ePGtVK8/fr0o4
kFul53leTt9dHQohAYqhZPeBtxQD3azvijtP27LgOq5japTgPntXH0U8uG2/P0wpD+XyHJPn3c5Q
J/5U/RjJ7Wp++v1qtk0VEEbJgR6gaYx3YAjyxOyKBlDhTfju3ecDlB/hHd29DtQQvQVuw+0MC6US
rGYvVsRd33MqIhcH44SVin2DOJ+eesk9KSZMkmSemRzFbFL337AcbvAufesJVwogQiLrPvAPKn/4
CGx9Zstts3ALxB4DkMllC1FW4gx9NT9aANl/qu9q9b5t9pD0smtRrIt4BOwoyhwWoKXhsOfO85Mi
tFfY+L54PE5Hrffg2Ki8ut5HJvhT+rlOAacmAw+gfW743cdSheGhItzM7kqd70YNjuDd3x885Rux
N8YJ+yzbIzCkhkdjS+LjuMjH4R2XrtXTeocwfsubyoTE9pWuntMcBKTskOh20T2G7Flp6Rk4cdQl
qZF5xh+AEpzBpPjsegZPE4EZeZTDY1YFwSlDcDIneqVf5Dlr+Z/3zg0yzhyDint6K9ZHtES2of/+
OPFQPvHJ86yCVrmC2GzglWFBklCmPD/uJ6kLJm5ce6xKFsGewE6VKIty0sQ9nlJsyIMQSV0Jvwkq
i39/FrnmUJSkBG/Gk/f9a0XF8elY5usZSjGZrpGu1+XYFs/xu4T7oDK0jybmJKOBeCHsVVqs8oJN
LhUW5PcnZeI5cNny3hefUIXlMuiG7w76NeCW7/MfviR5j8dALdm2nONsxrvbv/R2W57DETPRXDgU
SR7fhWUOcMitlU0dzVddpXlPfEq7pybyvrErgbJmt2PdVd0C3kLUrOjvCGkfqyHVuALDRSqM0iA0
6VtF41L7zD1QGbrX2ofLd0z23Q9YvbmVtXKdw1YU2VkFilhrMmmepgUGS50euW3bdd6ZA4ZhdLe5
s9aMFKRG4MoRN373YLCrMZLxN2vb8kNfAwsjGi9J76M640jGoqR3r6zIIQSFnXvv7EFpwQLBT0c+
oRilbTfwddrf3Yq/P4HRxCP72Q+4J6F0uqFsaZ/sA/rP+sICspyPOr3GbjJwARN3mJTC4F0CEsjY
gYRLWhMv8lvYna+e7pdBrIpU3JdNTk2l0x2MKYLkhXjALRA2juNEouDXXt45qE/xPoCF1HxjH9ay
bk/JffgO8Bex7g63IQT+NFd4zuUh55VZBjUmO7kBWB/YtDUckmRgozFukMVZ8EhCCkVwG20b0kmP
N9LEQzoEl7IfnVYPm0rCIOsDuaJXR7bswQHOHaMy4O/rRKaeH6agGYppVxAob9DrAHKM6lAZICjA
nftngUIcMbeA8+x9AOnzQH9/pKDJ1uZxFyt9BOZ8DDqTXg3gPqCPG6kC8DJv9+tdlQa9sXoJsxDL
KEpMKd8ynOqd/wK+GqYKeDfZ35+pUBXeYiDoxO1eeAuuhXDbqlTEozJ91f2od4UjdJt+qg++JkZ9
F3P7lloc7NJQ7+XAhAf9MgLNWKfv+oJPk6CSIgjCNCBdFlnwhodh3mrejnbF8x8Szw6jWmshfkII
+R3FOhpBYA50/pyVl3+P/KnFqKoye6DOpeAOSca6JsXm0N3zcAEgS65tRY6artgl35XhEXgszFiw
KYiAGq37bPDjOslWagu2qnIXy/1xfb8/MZOvPDiR89S7OE4BqA+tfhvZzeH/7Gadup6Qzutluwz8
XYMBmlWyMsi4szmu7ImRAdZt8PScKO4C6oxQ9AXDdHPV9ztR4CxwTf0ddHrJuSm0k/zOd7nnlMXn
xAEL07mnsfthhl0zCbyWHCnc2GSoVpb/eALCv17z/t2RcIiZcscwctJvDgboQLnO854RNI3gojcn
OjSQqeXcnUvYL30Br8REQ98yG4ylwQruiKZAF15+Ucq8oxhJgNuGUB6aMtzkxuwvuvAvHJWcZMWj
rSY6TfTEe/ntmZu14hPd1C8zrsRnQ7ifNfBhAWg9vuUQB7HfPdTAo9jzc5wHclWspqjxg6CLg2ov
kuG/Kz4AkFyePV+r+gZDW33XrozUWYsbrE17uUNAF6royXf6cEdkYL0SYEHbmQ2FFAxSMscORxYL
yeMTlLZk2iftp4jFuFLa0yyPjvs+c/xVGjLbIjH+7sjNB1XxBRMQMSneQcbNwEuz3PcJIPhNyq7A
igdIk3rQ/yzbBWzXsiVGkhSzXkcxufE58+YOxnjH9APUEFk/brqNlxV33pTL6Rt0tfyYYV9bgycf
lMVozlRkOuAewttU2k/yHMdY8UyBP6hlRHmCjdfVhTC7B6OQCeNksXyJVfLALlePTyj1eH7isfUY
JGPVLOTHDKC3DkARO/N1zMtwVCI2nBhHioFJQWa/um7jWZY0uFo+PmiZH3EZiS5LGBc1xiNnIPPN
Gwb4GJZIudz56EwcuJ8aW2uvyZKkyJju830iiKUQCwdZtGPBBWrv2gfTqsfVEEoXkJsZoyLryyPf
pwkx78Z+d6DjCoCZGD4tz6KqFbjiLjF6UX5qsikPjslZgj9ytwhE76dCnpHysQEFC+CCaaLILI8K
VvoquZHlJwOkJ/XQDvDG3ZEjq3myEgYzQBZDno0bvpAjeRd8e/XfHfCADxEALluCKH536I1IRVlk
ydVQEE4YKKmUv1N5O72GRl1OgHQ8eI2O6t2tSSVMfx7IMf3h9C4fIVsQvQZXlUetVsNLxgM2xhJQ
X3cWVUOvUxvxMO9GrFExl+KqKt5F0s5aFbTjgggVj8wbmuaW/N1bU4s70HrBxayu46pQIvPmDUxx
KbkjTOG3zFS+T9lW4+HxJpR+iLEsS2UnWPo7Y/tn9huxRFaIsNvu3M+ITkG1VIRqZ1U2zjsp9t+M
w+28F7iVKqg8bCn+8GC5J/liHiYrrobRfvc6bBBjuLz82LcYjZfH5xFJ2ge+rOX358TdRWa5q1JF
gUPI53qH2DUbv1q+/WmBgvByNcRoIKDbTa/ZDYYYiuZGyYFrt8rW3ue+c+WfXdu/K+w1Gbvs2u7r
MSfShuPf0qvHC8YrxNj6H1AFSYRgsfJyEYcV71AH3EBRf/dBJv2Gb67i0/b38RQxAfUNnrEDhiQR
FSBzgdyn+3xW5hQf6fjUyRD53EQv7nj+xX281m8USzjeJ8eyVvLQF2rbVfvGMOgNSbIFMHlwF51t
7RUFh8zvY2AyCUxps7mxTJXYsH2fSI+2cERXO1oCdVUbAlaAVcu0G6WlsgnqDTHafv+ShYP4rlYA
SXIdx3bF0EApEQLW4PBDMsR7Vx5F5cqaiasc6kMyUF3OodHXmZXOo9PNnktEphtq51xLFEwo0+9P
MeQ3rrFOUqxxGJ+NYuSARY3JJBRczqLpwWIuKuC2jd7avd+2Lc5nn+w4k8dDrTsmkxVshxugwqi/
+3v1ZXzwsc8/gULHoco/heeCJH6ZRSLOKwrcFzOmy3NWxgqM/XmCm4YUll2K+RlvJZuzIJXvb9ne
rW+e8o6O9NR3hqxeS0KzambwYzY2R3ELExBumi/CgzRGFZAUvro/Wt1ct3HePeNNm7YgXITqcpiX
NnQBWlq43vdZnI99VN+9BOrSkBnc7FF4Ed+td6i8ScKFI2+7xq31lcS3k1vTHGSZuX5ucVcv1ntj
HxR7fveH6BuPbzBu3WDi+/za+DJlvHDas9WCp/5Y7xGWQR/km2fG++RhMhjxYsqxOvK+j8wdA3oj
M+o7h886HrhaCHdCUXI4DsD4tTM5HHfCDXEk5qF6Cbs7yoYZFgnDOHr4bhA9G/M0Fx5LspkzHHya
XJFFIxf6zmP+/rDWY6yMXHjpcP/dYzPLhsSXLG41EjKFo/Vg7xuUgETLYYIE5qnVE3U+em5R5kYe
J9++C8otc3wE6/HfH2rB6livcULGua9Cghvphe/aUe+pD915lVZx+/7GjD+PRYIwJc8t0WeYwRXw
J6uhItk4232iSBZZoCKFi61wJVxMV7IbiCSm0rjcVdg5YKM96ZBh9HF7A/tE1KIoYVAh9CcNW5Iy
8Phbbi8YGDhTa02LwUGEBLdUZkWWgPdB5+uScTwMyPRTt7lnr/td5tcuGBBlQkdUvb9H/nWL72hZ
Im7Z0Tbz+s6qfMcoMjv3u376oaEpOjtbNcLhYSqUVR8s0mr3NLEUp8RRliW6O/utuWWOGE+tfEDd
9p2ksyMHpyFg5C2X2RiQhcADatsdx/vB+CBQUQF//8wpWr6sTtBALw7XDXXuxOgmLD6PArfD928t
S79zJTGUlf4+kG3jIZkSgZ7tvwpYbFN9vUdOid9WVjwOMSgEQUFRBm78bV1Z+/v7S2oKhaU1pEEd
nJdg8tkCoHMI+yuebaVIMpsl0GBMP4IL3S2jTUcJp5ib/ELqfc5ZJZu+a37lrPPIcjzmbbu7UEQn
DeTNlvB4+SjnkRMPvCwPGoHMUhL35u8PzM1M3ng3BiIXkAZZolCjl77pnQd1t2ySMAvFFIW3DaYh
Z5uG4Roa4YF/vGAZctVgggNUC16BoJQB7uP/sPdmu64jSbbg+wb2PyTqqRsqtDhTAm5Vg/M8z3op
kCLFmRRJcfz6dp3IyorKjKg8J3LYmX3vS8SRtiR3upstW8vd3Hx+hsOliO8vRAPqkW/2wqKudhbp
h0ULzL69ObdWSXusv/chnkye01wI6G16SbIlXOxnDSVaIMQXNgDa2XiVqO+D6Pd6zTOEehtP6+ZW
3wS/PG49atdCkS6uRSFZ/NAEjqFEr7BiRjHgfuK/8WAJKCWM69n7m5NHloCrwFNzT63lLKSJxR96
F8PvMGkBqNN7GyEGj6YMbNhSGEUhBJ+Tdg2YDXj9qgumpNOderXuKgv4Gy4kLfZeOenlJ9YKdmPw
60mg3uv3304HxzxbYOOh+RZ2nu319AKs9SziOH5JLu0DtiLjkgU7iIsS0IDLyuR+vuSxZvgK/Fjf
lQt8CzbsVYPaiq09Mj2dz8ujB7HUmnfKz0IP74jWxS/zg+L0vq4zV4TibD9AdE6rZV6W10zVdDvh
NaUIyx1FAf57KWe/z3m6FtQW8l0tMjxkiB0JNs5W7XKzhu2Vo6zHYeP1uh3sUd/f+SH3eAyuYy0V
zUGEfDTxrnsgDSybz9IFfHwABsc7kRC7bE4/dUY+eh/Yc1mBvwGFMpO6P76mb+sPnx+YVUwDl2QR
jSTJAdqkiup98hh79sPdPHaCOJ0BxpsmJVKo1T6/5WQq43udHVZ+WjnFL/Y8D24DkBxmSgBdIoPR
bkUPWkHkEjpfIUOa1GD0J5miW6H3HaDgNnZgHwd+uXRSoQ6NdBM0Tg/O2eN9spXahTcnV5S7+c5o
ubGyDSZ35m6iVRdLLCxe1VymJp2vAAIYmpJZP27CgTlRcnw1WjZDkxd2koZlpRP++owpqwLcUsjg
9xmw+GW0VfqK/doLXWH6przLGHMfkP56ICTM5joR58h0f1vsTQJEgdDeJ9OU43xqT+h56VAS6Hqg
6auo1Cs7EJss56QIzqnTtXqj+vrIQHRBJ9CLML4rpmjeVIerKICcCfQ+64kv80mdbKGAO4xEhfc5
oxeqd+TRXk9SvI9Fyj7fe5Mb7KeP6B5rgjeS7yxl/gZGrO6+/XIAfplV4k1w9bbnACUGcjlZ3vtZ
AnsTkowV4jrFM7cl0mxqSRrq/e6lyYVG9+Ijy+6pfjhSmViAQFHeoOyzXBplml4xW3Kf2Yvo49PF
f1dKMQr6vc9cWSOZufHyqHfnsnOjAk2WAsQxeyE1memHckkmxNM5o7pSElpR8VlUVfLipeN5aNWr
RsPNO9/SszPDJGu880T1maqs4Jab1DFSXBHYrSOvGZm2l1HZ+/f2VQOd5r2J28qjyVUA3Fx9F/tx
A2BcYOiBn5pY596e3BPwPMfyAHmW3qK2V5R3PJ+JIYOG2b6SJnrea/wkle89XhYnXnYfp3ezufct
jKMKHus7YIP3SMX8+ErKC4mdxHxQAB56U041ImDxjBA1sl3faeKskge0GA88PJ8JnrgZnTPMBI6w
usdzuY0zjmQA/pYVZw3DLudq2CcVxAH+ea23Rb6GXVXQvjg4eMeGlhdKoYza79Xc9KknvmgHirez
nL4ib18uGFvPfeBZORobpxzfp+nyOC+U2F27i5a/V3qQuFSex13d4HPHu1tOS149GeKBTR0jDC4l
3p6VcnMNdXmvzHO+AGK9ElPhww2h0MyFaR7O78pdwiTLuP/skL5VykEF+uTiOoAgNdRB4aFK30aD
LlW6hxyVXn2XpI79tqoy0Fk7BlR24VQ8SQjjiYaMPqxDEkChQwchAS/NQobFbc/Vm6/HQWo8N80o
IA2jw/MF2y5uz+J6y2SZTBTvX8Nj6LHAhPRSCyu6tYUx0pt8cmvIAFHY370r7+vH7Xicj0rc9JQn
iOGpkvdGmCh3SN2EjgGJ6BzsgN/nARdXtoF+xFEcSG1cF450TsUX8L1hWIXXgF1inaexTO0rj78q
Dxh1gfZHnrNaYOqTI0YSDDTUdrbugV+jX9kcZnMLDaVRXca7BlRknZAEUU7lUEniS9StdZu/1VMw
nlC5I+fH0iFeK1e9d6kX6PKIX8Esy/y4f37YD/22Qa6vT8uEJBrfP0bG258iXQG2q1AwZUHvYjB3
EIjQRK/y+0kJTzh2zY7YZnfvrONX5Bgx6r1//q6lg2MrB8cDElHyU5evNJSJNYYbbsM9FY0VekjM
zq/j3ikcMp/Gu3zVhHf0vjsQts5kiOCKQbxek/muQYQDGdATTi3L18OTSc4fYDAtgFZibb9XXN+u
RiwFwC8t8phcHUcSuTG7B7ZnE2K47W1ZulbYpbMjnsGT0qthiYh74BPC1OeRye5qnJt7yZf43eFs
X7KPF3dlMMFeDRuDsIW4QD6CawwBJy8ieZ9jcr1biJPC8gTc8oyXFOf6VX/w5XZXrSXwzQvjBqgp
SLJoCC+nF85qjFHrmS/LE9fkO4VWJJlksmzIyz3f89cUmVJ2Aazm0A5N1ij0ZAkZd5m06AFUhqfC
DTSrcaiDSSBfadLcdbHbb5x4WUr7goRt2t4AHuiEf0WeGrPm7CwmINa3NWCcT1zL1YB+17gqY5TT
n7PecUR3y1VdZNWtwQO/BKRkeSbEZSaDd1bK3I2w0pfDI0hOcYc3FCu5wE/fNRLQJzFPpxslT/FB
ucTVaNjs/JjlWALwdkpoDQqn5toD7nnVH8lxgqX1cnsCyXEJ4RCd0vH1eIIhA31bxVV/RCJPW54n
PIdhunRoqIVRYNeA+y1246TmsMJ5FrFGEF7Q8PHgb0uIC1K2TPjN8WCdfyxk68QMiFmAogsldb6Y
7zWsupWnpGuBMkLcDkMEw/wW6QAyGJ1uaZho0dEDCwxvUZy2sLfr9SXdvOvgIXv7PL8rfqxakp5O
HRCg06XtlhLOWY0Fxl+3k0CmBvC0ZXTIWWtO+YO8nq4GTa2ZNHB9A9OBYBXpXhpnKrdMD8QF9Hq2
HuXJaYzFfRTR6N/i964o96gXlE9DZs9ZiavdABi0/E7Ae7Q+47Ji8mYPDnybamviJQwIWwvEU1x1
V9mbA4+3vYahhapI8HopcDfK+MLnkbSKbdlsE57SLTQAgM1M6n49HPiCurJMqdU0aBZrcM88A9xy
P4UIW79U59Ru20YexDa4tAVR1mM/oQbr1nSyUjdK5HDmGM97wTxoplbT/Dxrj/PGqDtr6IGiP3Op
BUr8El3PZ0l/594V6Jid4edNO+vZ4eVmScankQ5XymbDkWG25DXtiytRrjm7IGLuGqsKcMvlodA2
Sm1CIAKGKArzoWgwtlGPkH55xWj61qPcUzxzKDzDuXSi1E5ucybkTbPuFxyL41W3OZuD9B2/E+1l
4ddJFa5vr8eHQ8iE8eBm3L22cgADOjIAxVM+ebtOAshUL5JPD/X5oO1l9RJqp2SoQ5jE7iFPuVji
ZaPuZzLNOufzo3Df+fXGRjD9qGyTrwaVwWp0GPH+IwVx9QqELay8bY6SOLM5TZO2tLp9mi3/Qsmk
ToQuQ4SWwiINAjj5eLOOB6rTgnOsLKVls2Pb71XuQC97N4Dgnm4pYSzi7P4w0FgTu67mYp64X+o5
RBcs3rS7Pyw+CCfL58f0dNC9APMW5ohbdMhBm/mN4R/Jzu6JTJBrrFQ90gUj395Xz+ey5kSbF76Z
W0cOYdqyWL07BrcnhBJ9VzRKzNRRluO9c0eLHQsn8rGjOUUWNiBO33KNhne1oxYbmvGUPPR3zavF
eZ/gG9QSAwqJm6/IrGws8HpGJngDsKmyn1Xi8c77yPhbkzMnaIl3CEh99wLrNx8h9YK2Nc4lxpfN
nHMqedkRh9CHxF7OHZqztXsBc/pCnmPXiWkjW15bvVAgyfE7FE2ueBNiL8nNoK/O76d5UeNIbsyb
DycvNQwJ4TrnNvtOisazR8fBIogy2vkYkFU65fQEz07OaJiglPkTBCVLivLDc85pTUutXLr2gdcr
iOulhaxqO0i8oSj9OdBQNFVdwMrP188P8YLEejSBT1W53e10bQ4ZsV8qCdMGpRy5oIWUjTvTR05d
hMOgBzhbykEqpyrK+ZXd8F2xyDv0PpVpAV3PtW6sz0gS4E4JJEyX78XsGRmNJ4g2c2TnkfE7J998
ABW+y9fmesV7uTyrZkAPLUBM+XRW4uoKwjfwLMoYE9OYZI4PAGIs71082neAEysOtTDU9WG/F0yR
srCmcK5qrYyHWx5EDOy5S+u/bI+nqfeeeF8L7JuHePnCUc7yPrPozyheQbV7U7EhrjeKIpoLzde2
ZL0CMpKCK/MIfALWk27O2d0oJItrq9tLaNFs4ev684N3hVg6jN5NJZcDYffee2AMnhxE3HTuCLHM
JxvXnemHeppIx2vkqGa6LibD+NCfg0pAaBBflkn3H4kIkNxgkoTEimu+eHbP0EG5wycnJ9ITri3n
ildP5Tvfs0rI8xXuIcpQD54bhScJifnEVMmFDF8D8c6Xod9VNY7EVtEz7pCPWnSY1SxI3LTUua1T
wc7j1Azn95n1YPGvSXyVtJyx2kh9JJfUdl2sDvkNwHtHtRhTv/NqTCFymWSACKBtb/mWo/J+nysw
sBPMSAUqs1HTrZz78CHOhWzoksn8aXlnG7Htnb5QFFX0jmfTPoccnx+3CSnf54fmR2O1Eie2C9tc
d7frpj0z/emOvESvvJ2kiKbsM+WVectF+hkyMCR53Nz8zr5PCBelkIfhCLTzS9RaV9+A3gIaAA5W
h2Go6FaswrtkH6V5j92GEvyarevdoGnAz0k+DB9pcQOMcJcIY3wK4nkl14PmgK4nyStjEySCSDsr
VzpejI93qtKWCpVN8i/kXYwo6YHtPJZt6YASD7sz+wr6SOMv4/Kt1kTYLS8dcAPwpHRBweG0tt6a
S89Ce9aU+UrFVVnNVQ5zu63X9n0gzWRxmHhZzXu3nbIoTnQ0CuMSSuW86I/qv4WiKIZp/j7H9K1G
3wZs77RM1W69Xz13aq/MJytiS4semjtYLV9IHpGZUn3Nzrf8veaLqN9OAZ/V/dIyB5LuWbe2UnAw
VHd5ldOdnl+rRr2zznMoUPkRivntjrZr97gjRKLUikC57JRW87uqIRWZ7+zNzbXJa7t7zS2kEzZS
pbwRNI6j/FTmi6mprW67mOoTJrD4fR6xfO/hmuEIvRPDO8ClO+mQdq7kiui9X3+SCVhNSUJty+SI
kv3SScCR3XyTatcQk0ngAFj1frVh5LdKfLPoPr0ewW8zStUnjufg0k3Z/F5Kg/L5sZbzskiqdnA7
O8I16A1lek7DVLlopcmJQoJd2AOXqR1dJOQG2KEIWPsExCaPuGePRBgg5WAce8X8N511+1ap+NtZ
u9Fe0A2TGavrocFT36eqvtU2hmzBBkJcK4AcygSgsq9iJuZYLoy+/7yVo0gkLnMDjMvnnXxW88gn
8LsVNrhxf9cxE2GiCYHwflQ/PfH5ZGrEw8ROx+1yLrEpUN+sORjQKkIU+3XTc/r+rnusXS+iiK6W
Sp4vWjcipNCtr3TUWiI2asEC5PjBSolDn97LRdi0LP37ZIQUq8crwpxWvqXBYdaHFo9e+T5fv2r+
MPnvIiAMdTHfJ1ny1B94C+mh54AZQHVYj9woVg1pIaRfu5C+sZLMxrNQQ02pTZzwrlmA3Kvq86OK
Tua2Tu9kMiDT7kmuvs6KY9kxc6qf28PnCZ4hx281hFv3ufbAWoLh8HMBe3m6hpGYSN14EgUS+q1P
yefpuFDKxkMAMc7Mfc+u52/nFGvifLvKt0GNKfbChKzE+sHY3QWe9/ub+K6DrPLXk9feWb2VtK4m
CuALl/N27eWreE0PqU/Qb59aHi+O7OtrHkfmYVEx5KUvwALxuVshJAAW5UVg3ptSuleOdrWCJcDg
+mIBxsUVav9egeK99NizuZoTh2J3ynJDUpbBo/dU7cpjbi/devEVKhwDMuNIuJOeiXxTlJ9qrpoH
do+fQBm5rtPxC0XTyhNv8wCfk7rs7LJ/hIaZ1Mi4h5i6POP/rO/qF/R54sPXBbUAP+AoOPMN+8HY
h1tjgJOjoWmarhfUaSS0NXmohibkBoHjG6ns97p4TGfdS5FlfLM/ie9fIX9pbTFK2Ft9C0K7ZngW
peOgU4z580Pw5FXnruKTeAR660qcNhpHmQTX2UmfGlKg3k4yj5zKCRiHW9I8JuJbPd3ZQaZIHyaA
q0kS2cvkFz1AcqWwkyd+fYwZHTbnU/LsaV2gdty4bopULo9Hcrsd9oyyBfDPwQ+Eip54BDbch3kK
znafB7pwZIa5LBPwBVx93PZqQhbTb8drIQ/sJQi0vU+O68MBoYX1nZvhaQtniOyLB6P+DL/V4JwB
IllmvgD1KcM3Vg2rE5gFJ3JdJnaRUzy/d/AibY+0sJqm+8N6b2xQRHVFg86ztbKhukltLVGKDLV9
mMz71FU8IZHuD1uUp+/aTSm2LJfsvjfXcGU7/9XQPXZnWKHaTkD/6aK018/dooelzHQB0g6KOnub
xWIajOeLLvJEaJfvlYZ3VZXPD2fYbtN6w7OwK0/4xorznlSYZKc2f33v/9UyCPkJX227dDVTdD1L
WHuWbrSGUYIlY+MtT/briwVIoE7vrIklqPwWjgt/v6P69s7Jvtjt2Df9MdDQvj7Mu/b7yte/VPd6
lS+4KAGY3yaA5ER/bVeLnmXd968arDcVCWCthd7nckf+dBZfgCl6uu3dROwAeiJg9kDIiRjPHVyi
xuWQHRmEsuRVvDM6MhaoSLqkSUBcT1AhOza3QMa7CnspPXUOi6k450SZF8dG80X8ZLbobfrmMz+d
AwW4gmGPiHRPNVCUZb7R8qskDkV61yrL33vvAgAn5dvOOVbLe6Y2cBKiwhOjLxD1EKnl/MyukKkw
SwhC/0KnM3p77RoKovMWYalB0gt6EF7zTAJCelxpVCqqONnH2XFu6hEuYxIzB7dpWQW6cnagq7Yl
er6y9IpdzGnTXC45hWYA1Mds4TAtP9Rbz1NrDrV058kjDMQL0IDYJdveGTA/nSS8m2Ju0ZbHv2xF
kw/D1i3/rOXtbWXRkb3e/M8PRNcnvdTeFfWfwHd7NJlQOofi4l1pf2zk7EFcm8U95UhEPfro7jyo
OlZYpU6K8/mMbfQKWlR4tkDZd6ynmssZKKJ31K2bl32kfT5cC1iLnGQJribjTG4monpNggCiuYBK
1nHxTjPx5DgonvN8QpD3yS6svQFfqPr0lRXIcT3AEK95blLtoOZSr+wL+1Ptmv2mHcXlxNJGx5b0
OxeOp6MAezlP71yBX7uu4CH89pAkEE/fdaOA/Q6F9z4ZYtVPhXkz95ewhGzzrvYrvNOY131HUIkB
XhaVSjmMW4DXdDxIpilbO0UHiN6fus8PyQmmwB1TBfCpxzW27m4CtVl/dMVy5Yci6MkuCJt33uc7
1XCv10lm3n3rB6emlaB53ivzgFLZiRqAb2Dom3fcFuYNMZAVEXagyBHhQALAwgIqKgaADorMMzDP
TkKoNj3oWy1PCXO8o7QlbLP61o82lwK9IB0Rwr8r7GaV1Vva+yYHXYBDZcyge34eTgx6JpJe4ocn
gS8LenlcnG0ZrjnmaehP13A0vFs7s9UyzP86//6ijt9f6vHnbvnQ4q1syyOj++1f/p2Pm+nPXwyi
ld2PfuV9Ucy//Psfbmf5s593s+19Ncr74pnfgc835T1+lX33p9/jlqx7/ey2E/CVqezyn7X1Hz97
+3+dv33+l76s9nH682+9X//Rx//8HTfC2M9PMCx/83tu3vfIPJN+0wDH/5+uuvnTkVX7n4byX/4d
ucL/+juEIP9kUH9t+n7e6Hd86ae7auArBlqBvqcVN06kLs2AUaF/erXNL37cefXPXzPBXzOqd+9/
52SvF7CH6Tu+9S73nny7O+fXmvnzdqHGSdb8zY2iebfiZPe+S6f/2Sj+J7OAL//6OxhFfuFBf80u
ft7ud33t97cYEcAwfmmif9gyfm2qf9+n//e7v0I1Zd69TSRNm8wu8+L1S/N9/mnCf8QAmL5N+r8H
MNzfDQEfBQb+Gy2BBS9ZIAB/f2PUf75Uy+mXBuOX75yKv3kX18XAcQCquuP8S47zC1dOgaH5b50D
H3m/99+H1nmN4Nf/9XftdO/Hpkz+GsP3+z6+G/uS5n8PLn/U/ncN2n+57gX6Udf9U3P5AQcm3vED
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
AA==#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2015 v4.2.81
     Generated on:       3/22/2016 12:22 AM
     Generated by:       Legio1221
     Organization:       ASTRA
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2015
#>
#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Call-ClockApp_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formCCApp = New-Object 'System.Windows.Forms.Form'
	$groupboxMisc = New-Object 'System.Windows.Forms.GroupBox'
	$labelSeconds = New-Object 'System.Windows.Forms.Label'
	$comboboxSetSeconds = New-Object 'System.Windows.Forms.ComboBox'
	$buttonMiscSave = New-Object 'System.Windows.Forms.Button'
	$labelTimeZone = New-Object 'System.Windows.Forms.Label'
	$comboboxTimeZone = New-Object 'System.Windows.Forms.ComboBox'
	$labelMisc = New-Object 'System.Windows.Forms.Label'
	$labelClockMode = New-Object 'System.Windows.Forms.Label'
	$comboboxClockMode = New-Object 'System.Windows.Forms.ComboBox'
	$comboboxDST = New-Object 'System.Windows.Forms.ComboBox'
	$labelDST = New-Object 'System.Windows.Forms.Label'
	$buttonStopAlarm = New-Object 'System.Windows.Forms.Button'
	$buttonViewSettings = New-Object 'System.Windows.Forms.Button'
	$groupboxSettings = New-Object 'System.Windows.Forms.GroupBox'
	$comboboxSetAMPM = New-Object 'System.Windows.Forms.ComboBox'
	$labelAMPM = New-Object 'System.Windows.Forms.Label'
	$buttonSettingSave = New-Object 'System.Windows.Forms.Button'
	$labelMinutes = New-Object 'System.Windows.Forms.Label'
	$label1 = New-Object 'System.Windows.Forms.Label'
	$labelHours = New-Object 'System.Windows.Forms.Label'
	$comboboxSetMinute = New-Object 'System.Windows.Forms.ComboBox'
	$comboboxSetHour = New-Object 'System.Windows.Forms.ComboBox'
	$textboxAlarm = New-Object 'System.Windows.Forms.TextBox'
	$buttonDecrement = New-Object 'System.Windows.Forms.Button'
	$buttonIncrement = New-Object 'System.Windows.Forms.Button'
	$groupboxSetAlarm = New-Object 'System.Windows.Forms.GroupBox'
	$comboboxAMPM = New-Object 'System.Windows.Forms.ComboBox'
	$buttonAlarmSave = New-Object 'System.Windows.Forms.Button'
	$comboboxAlarmMinutes = New-Object 'System.Windows.Forms.ComboBox'
	$comboboxAlarmHour = New-Object 'System.Windows.Forms.ComboBox'
	$labelAlarm = New-Object 'System.Windows.Forms.Label'
	$LabelTime = New-Object 'System.Windows.Forms.Label'
	$timerClock = New-Object 'System.Windows.Forms.Timer'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	<#
		.APPLICATION 	- CASTRO CLOCK APPLICATION
		.COMPANY 		- SAINT MARY'S UNIVERSITY
		.AUTHOR 		- OSCAR GUILLERMO CASTRO
		.EMAIL 			- OCASTRO1@MAIL.STMARYTX.EDU
		.FILENAME		- CLOCKAPP.PSF
		.VERSION		- 1.0
	#>
	<#
		.SYNOPSIS
		A Windows Powershell based clock application. 
		The application allows users to view time based on time zones, and it allows them to set 1 alarm.
	#>
	
	$formCCApp_Load={
		#TODO: Initialize Form Controls here
		Setup-CastroClockApplication
	}
	
	#region Program Setup
	function Setup-CastroClockApplication
	{
		CCAppSetup-GlobalVariables
		CCAppSetup-ConfigurationFiles
	}
	
	function CCAppSetup-ConfigurationFiles
	{
		<#
		.SYNOPSIS
		This function makes sure that the proper files are actually present in the script's directory.
		#>
		
		# Testing alarm sound path
		# =======================================================
		try
		{
			$testSoundPath = Test-Path $global:SoundPath
			if ($testSoundPath -eq $false)
			{
				$ErrorMessage = "Alarm.wav is not present!`n`r"
				Add-Content -Path $global:TracePath $ErrorMessage
			}
			else
			{
				Load-Alarm
			}
		}
		catch
		{
			$ErrorMessage = "Error occured at CCAppSetup-ConfigurationFiles whilst attempting to locate alarm.wav!"
			Add-Content -Path $global:TracePath $ErrorMessage
		}
		
		# Testing configuration path
		# =======================================================
		try
		{
			$testConfigurationPath = Test-Path $global:ConfigurationPath
			
			# Checks for the config file.
			# If true, proceed to retrieve the settings.
			# If false, proceed to first time use setup.
			if ($testConfigurationPath -eq $false)
			{
				CCAppSetup-FirstTime
			}
			else
			{
				Retrieve-ConfigurationSettings
			}
		}
		catch
		{
			$ErrorMessage = "Error occured at CCAppSetup-ConfigurationFiles whilst attempt to locat alarm.wav!"
			Add-Content -Path $global:TracePath $ErrorMessage
		}
		
		# Loading GUI components
		# ========================================================
		
		# Loading Alarms
		# ==============
		if ($global:AlarmTime -eq $global:DefaultAlarmMsg)
		{
			$textboxAlarm.Text = $global:AlarmTime
		}
		else
		{
			if ($global:TimeFormat -eq "HH:mm" -or $global:TimeFormat -eq "HH:mm:ss")
			{
				$textboxAlarm.Text = $global:AlarmTime.ToString("HH:mm")
			}
			else
			{
				$textboxAlarm.Text = $global:AlarmTime.ToString("hh:mm tt")
			}
		}
		
		# Loading combobox with the list of tme zones.
		# ============================================
		$list = $global:TimeZoneList.GetEnumerator() | sort Name
		foreach ($TimeZone in $list)
		{
			Load-ComboBox -ComboBox $comboboxTimeZone -Items $TimeZone.Name -Append
		}
		
		# See Identify-ClockMode help section for more.
		Identify-ClockMode
	}
	
	function CCAppSetup-GlobalVariables
	{
		<#
		.SYNOPSIS
		Setups the global variables.
		The function attempts to setup the various variables that will be needed during the program's execution.
		#>
		
		# Attempting to create global variables.
		try
		{
			# ===================================================
			# Global Variables
			# ===================================================
			# Variables are set to defaults.
			$global:DefaultAlarmMsg		= "Alarm hasn't been set."
			$global:TimeZone 			= "GMT"
			$global:DST 				= $false
			$global:AlarmTime 			= $global:DefaultAlarmMsg
			$global:Sound 				= ""
			$global:isSecondsEnabled 	= $false
			$global:is24ClockMode 		= $false
			$global:TimeFormat 			= "HH:mm:ss"
			$global:CurrentTime 		= Get-Date
			#$global:FirstUse = ""
			# ===================================================
			# Paths for the trace, sound, and configuration files
			# ===================================================
			$global:TracePath 			= ".\ClockApp.trace"
			$global:SoundPath 			= ".\alarm.wav"
			$global:ConfigurationPath 	= ".\config.ini"
			
			$global:TimeZoneList =
			@{
				"GMT" = 0.0;
				"UTC" = 0.0;
				"ECT" = 1.0;
				"EET" = 2.0;
				"ART" = 2.0;
				"EAT" = 3.0;
				"MET" = 3.5;
				"NET" = 4.0;
				"PLT" = 5.0;
				"IST" = 5.5;
				"BST" = 6.0;
				"VST" = 7.0;
				"CTT" = 8.0;
				"JST" = 9.0;
				"ACT" = 9.5;
				"AET" = 10.0;
				"SST" = 11.0;
				"NZT" = 12.0;
				"MIT" = -11.0;
				"HST" = -10.0;
				"AST" = -9.0;
				"PST" = -8.0;
				"PNT" = -7.0;
				"MST" = -7.0;
				"CST" = -6.0;
				"EST" = -5.0;
				"IET" = -5.0;
				"PRT" = -4.0;
				"CNT" = -3.5;
				"AGT" = -3.0;
				"BET" = -3.0;
				"GST" = -2.0;
				"CAT" = -1.0;
			}
		}
		catch
		{
			Write-Host "init failed"
		}
	}
	
	function CCAppSetup-FirstTime
	{
		$groupboxSetAlarm.Visible 	= $true
		$groupboxSettings.Visible 	= $true
		$groupboxMisc.Visible		= $true
	}
	#endregion
	
	#region UC1 & UC2 - Select Time Mode and Set Time Mode
	function Set-TimeMode
	{
		param (
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			[boolean] $isSecondsEnabled,
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			[boolean] $is24
		)
		
		<#
		.SYNOPSIS
		Set-TimeMode checks both parameters and decides whether the application will display time in the
		12 or 24 hour mode. It also decides whether to display the seconds or not.
		
		.PARAMETER
		$isSecondsEnabled - A boolean that if is set to $true, the application will display seconds. If
		false, it'll display just the hour(s) and second(s).
		
		.PARAMETER
		$is24 - A boolean that'll set the hours to be displayed in 24 mode if true. If it's false, the
		application will set the hours to be viewed in 12 hour mode.
		
		.EXAMPLE
		Set-TimeMode -isSecondsEnabled $true -is24 $false
		
		.NOTES
		Although the function does not yield a return variable, nor does it return any value, it does in
		fact make a change to the global format variable.
		#>
		
		if ($is24)
		{
			if ($isSecondsEnabled)
			{
				# 24 hour mode and seconds are enabled
				$global:TimeFormat = "HH:mm:ss"
			}
			else
			{
				# 24 hour mode ann seconds are disabled
				$global:TimeFormat = "HH:mm"
			}
		}
		else
		{
			if ($isSecondsEnabled)
			{
				# 12 hour mode and seconds are enabled
				$global:TimeFormat = "hh:mm:ss tt"
			}
			else
			{
				# 12 hour mode and seconds are disabled
				$global:TimeFormat = "hh:mm tt"
			}
		}
	}
	
	function Identify-ClockMode
	{
		<#
		.SYNOPSIS
		Identify-ClockMode loads comboboxes with the appropriate 12/24 hour and seconds settings.
		
		.DESCRIPTION
		Identify-ClockMode checks the global time format to identify whether 12 or 24 hour mode is enabled.
		It also checks whether seconds are enabled.
		
		.PARAMETER
		$global:TimeFormat - The global time format. Not a specified parameter but essential to the function.
		#>
		
		# Function Variables
		# =======================
		$is24 		= ""
		$isSeconds 	= ""
		
		try
		{
			if ($global:TimeFormat -eq "HH:mm")
			{
				$is24 = $true
				$isSeconds = $false
			}
			elseif ($global:TimeFormat -eq "HH:mm:ss")
			{
				$is24 = $true
				$isSeconds = $true
			}
			elseif ($global:TimeFormat -eq "hh:mm tt")
			{
				$is24 = $false
				$isSeconds = $false
			}
			elseif ($global:TimeFormat -eq "hh:mm:ss tt")
			{
				$is24 = $false
				$isSeconds = $true
			}
			else
			{
				$ErrorMessage = "Time format isn't in 1 of the 4 possible combinations"
				Add-Content $global:TracePath $ErrorMessage
			}
		}
		catch
		{
			$ErrorMessage = "Error occured at Identify-ClockMode."
			Add-Content $global:TracePath $ErrorMessage
		}
		
		if ($is24 -eq $true)
		{
			#Load comboboxes with 24
			$list = 1..24
			foreach ($num in $list)
			{
				Load-ComboBox -ComboBox $comboboxAlarmHour -Items $num -Append
				Load-ComboBox -ComboBox $comboboxSetHour -Items $num -Append
			}
		}
		else
		{
			$list = 1..12
			foreach ($num in $list)
			{
				Load-ComboBox -ComboBox $comboboxAlarmHour -Items $num -Append
				Load-ComboBox -ComboBox $comboboxSetHour -Items $num -Append
			}
			$comboboxAMPM.Visible 		= $true
			$comboboxSetAMPM.Visible 	= $true
			$labelAMPM.Visible 			= $true
		}
	}
	
	function Change-Time
	{
		<#
		.SYNOPSIS
		Change-Time changes the time based on its parameters.
		
		.PARAMETER
		$hours - Dictates what hour will be set.
		
		.PARAMETER
		$minutes - Dictates what minutes will be set.
		
		.PARAMETER
		$ampm - (Optional) Dictates whether time will be AM / PM.
			True 	- AM
			False 	- PM
		#>
		
		param (
		[ValidateNotNull()]
		[parameter(Mandatory = $true)]
		[int]$hours,
		[ValidateNotNull()]
		[parameter(Mandatory = $true)]
		[int]$minutes,
		[ValidateNotNull()]
		[parameter(Mandatory = $false)]
		[boolean]$ampm
		)
		
		# Function Variables
		# ==================
		$timeString = ""
		$timeAMPM 	= ""
		
		if ($global:TimeFormat -ceq "hh:mm tt" -or $global:TimeFormat -ceq "hh:mm:ss tt")
		{
			# 12 Hour Mode
			# ------------
			
			# Set $ampm as 'AM' or 'PM'
			# -------------------------
			if ($ampm -eq $true)
			{
				$timeAMPM = "AM"
			}
			elseif ($ampm -eq $false)
			{
				$timeAMPM = "PM"
			}
			else
			{
				$ErrorMessage = "Error occured at Change-Time whislt setting `$timeAMPM."
			}
			
			# Setting up the string that'll be parsed.
			# -----------------------------------------
			$timeString = "$hours`:$minutes`:00 $timeAMPM"
			
			try
			{
				$global:CurrentTime = [DateTime]::Parse($timeString)
			}
			catch
			{
				$ErrorMessage = "Error occured at Change-Time whilst trying to parse `$timeString"
				Add-Content $global:TracePath $ErrorMessage
			}
		}
		elseif ($global:TimeFormat -ceq "HH:mm" -or $global:TimeFormat -ceq "HH:mm:ss")
		{
			# 24 Hour Mode
			# ------------
			
			# Setting up the string that'll be parsed.
			# ----------------------------------------
			$timeString = "$hours`:$minutes`:00"
			
			try
			{
				$global:CurrentTime = [DateTime]::Parse($timeString)
			}
			catch
			{
				$ErrorMessage = "Error occured at Change-Time whilst trying to parse `$timeString"
				Add-Content $global:TracePath $ErrorMessage
			}
		}
		else
		{
			$ErrorMessage = "Error occured at Change-Time. Time format isn't in an appropriate form!"
			Add-Content $global:TracePath $ErrorMessage
		}
		
		$LabelTime.Text = $Global:CurrentTime.ToString($global:TimeFormat)
	}
	
	#endregion
	
	#region UC3 - Adjust Daylight Savings Time (DST)
	function Set-DST
	{
		param (
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			[boolean] $isDST)
		<#
		.SYNOPSIS
		The function takes in the boolean parameter and checks whether DST is enabled.
		If true the timer gets +1, if false timer gets -1.
		.PARAMETER
		$global:DST - The global value of the daylight savings parameter.
		#>
		
		if ($isDST -eq $true)
		{
			$global:DST	= $true
			$global:CurrentTime = $global:CurrentTime.AddHours(1)
			$LabelTime.Text = $global:CurrentTime.ToString($global:TimeFormat)
		}
		else
		{
			$global:DST	= $false
			$global:CurrentTime = $global:CurrentTime.AddHours(-1)
			$LabelTime.Text = $global:CurrentTime.ToString($global:TimeFormat)
		}
	}
	#endregion
	
	#region UC4 - Select Time Zone
	function Select-TimeZone
	{
		param (
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			[string]$currentTZ,
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			[string]$futureTZ
		)
		
		<#
		.SYNOPSIS
		Select-TimeZone makes the appropriate changes to the time as per the user selected time zone.
		
		.PARAMETER
		$currentTimeZone - The application's current time zone value.
		
		.PARAMETER
		$futreTimeZone - The user's desired time zone value.
		
		.EXAMPLE Select-TimeZone -current 0.0 -future -6.0
		
		.NOTES
		Function Logic
			Find which time zone is the lesser in value. (e.g. [CST = -6] < [GMT = 0])
			Find the difference between both time zones. (e.g. CST vs GMT, difference = -6)
			Apply the difference to the current time.
		#>
		
		# Function Variables
		# ==============================
		[double]$current
		[double]$future
		
		# Assigning value based on the respective time zones.
		$current = $global:TimeZoneList.$currentTZ
		$future = $global:TimeZoneList.$futureTZ
		
		# Convert to GMT time.
		try
		{
			<#
			if ($current -lt $future)
			{
				$result = $future - $current
			}
			elseif ($current -gt $future)
			{
				$result = $current - $future
			}
			elseif ($current -eq $future)
			{
				$result = 0
			} #>
			$NegativeCurrent = ($current * -1.0)
			$global:CurrentTime = $global:CurrentTime.AddHours($NegativeCurrent)
		}
		catch
		{
			$ErrorMessage = "Error occured at Select-TimeZone, unable to take the negative current time!"
			Add-Content -Path $global:TracePath $ErrorMessage
		}
		
		# Setting result into the current time and displaying the newly set time.
		# =======================================================================
		try
		{
			$global:CurrentTime = $global:CurrentTime.AddHours($future)
			$global:TimeZone = $futureTZ
			$LabelTime.Text = $global:CurrentTime.ToString($global:TimeFormat)
		}
		catch
		{
			$ErrorMessage = "Error occured at Select-TimeZone whilst trying to set Time Zone and Current Time."
			Add-Content $global:TracePath $ErrorMessage
		}
	}
	#endregion
	
	#region UC5 - View Time
	# This region's intended features are located throughout the event handling region.
	#endregion
	
	#region UC6 & UC7 - Set Alarm & Generate Alarm
	function Load-Alarm
	{
		<#
			.SYNOPSIS
			Loads the alarm sound foo.wav from the scripts directory.
		#>
		
		try
		{
			$global:Sound = [Media.SoundPlayer]::new($global:SoundPath)
		}
		catch
		{
			$ErrorMessage = "Couldn't load the alarm sound.`n`r"
			Add-Content -Path $global:TracePath $ErrorMessage
		}
	}
	
	function Generate-Alarm
	{
		<#
		.SYNOPSIS
		Generates an alarm that lasts for 60 seconds.
		#>
		$flag = $true
		try
		{
			$global:Sound.Play()
		}
		catch
		{
			$ErrorMessage = "Failed to use Play() for 60 seconds`n`r"
			Add-Content -Path $global:TracePath $ErrorMessage
		}
	}
	
	function Set-Alarm
	{
		<#
		.SYNOPSIS
		Set-Alarm takes in time parameters and sets an alarm.
		
		.PARAMETER 
		[int]$hours - The hour parameter.
		
		.PARAMETER
		[int]$minutes - The minutes parameter.
		
		.PARAMETER
		[boolean]$ampm - The AM / PM parameter. True for AM, false for PM.
		#>
		
		param (
		[ValidateNotNull()]
		[parameter(Mandatory = $true)]
		[int]$hours,
		[ValidateNotNull()]
		[parameter(Mandatory = $true)]
		[int]$minutes,
		[parameter(Mandatory = $false)]
		[boolean]$ampm
		)
		
		# Function Variables
		# ==================
		# String will be in the following formats:
		# 		"hh:mm:00 tt" - 12 hour mode
		#		"HH:mm:00" - 24 hour mode
		$alarmString 	= ""
		$alarmDateTime 	= ""
		$alarmAMPM 		= ""
		
		# Logic for 24 mode
		# =================
		if ($comboboxAMPM.Visible -eq $false)
		{
			# Formatting to appropriate format
			# ================================
			$alarmString = "$hours`:$minutes`:00"
			try
			{
				$alarmDateTime = [DateTime]::Parse($alarmString)
				$global:AlarmTime = $alarmDateTime
			}
			catch
			{
				$ErrorMessage = "Error occured at Set-Alarm whilst tring to parse the alarmString."
				Add-Content $global:TracePath $ErrorMessage
			}
			
			# Loading Textbox
			# ===============
			$textboxAlarm.Text = $global:AlarmTime.ToString("HH:mm")
		}
		
		# Logic for 12 hour mode
		# ======================
		if ($comboboxAMPM.Visible -eq $true)
		{
			# Checks if AM or PM
			# ==================
			if ($ampm -eq $true)
			{
				$alarmAMPM = "AM"
			}
			else
			{
				$alarmAMPM = "PM"
			}
			
			# Formatting to appropriate format
			# ================================
			$alarmString = "$hours`:$minutes`:00 $alarmAMPM"
			try
			{
				$alarmDateTime = [DateTime]::Parse($alarmString)
				$global:AlarmTime = $alarmDateTime
			}
			catch
			{
				$ErrorMessage = "Error occured at Set-Alarm whilst tring to parse the alarmString."
				Add-Content $global:TracePath $ErrorMessage
			}
			
			# Loading alarm textbox
			# =====================
			$textboxAlarm.Text = $global:AlarmTime.ToString("hh:mm tt")
		}
	}
	#endregion
	
	#region UC8 - Reset Alarm
	<#
		Due to the manner in which the alarm is generated, UC8 only contains a function to immediately stop the alarm sound.
	#>
	function Interrupt-Alarm
	{
		<#
		.SYNOPSIS
		Interrupts the alarm so that the user can silence it.
		#>
		try
		{
			$global:Sound.stop()
			#If this fails, prepare to bleed from your ears for 60 seconds.
		}
		catch
		{
			$ErrorMessage = "Failed to stop alarm sound.`n`r"
			Add-Content -Path $global:TracePath $ErrorMessage
		}
	}
	#endregion
	
	#region UC9 - Save User Settings
	function Retrieve-ConfigurationSettings
	{
		<#
		.SYNOPSIS
		Retrieves the clock application's configuration settings
		.NOTES
		The configuration file is setup in the following manner:
			SETTING_NAME = VALUE
		#>
		# Retrieve content from the configuration file
		$ConfigurationContent 	= Get-Content $global:ConfigurationPath
		
		# Save retrieved time in order to convert it later in the function.
		$RetrievedTime 		= ""
		$RetrievedAlarm 	= ""
		$RetrievedFormat 	= ""
		$RetrievedDST		= ""
		# Parsing configuration file
		foreach ($line in $ConfigurationContent)
		{
			# Splitting each line the configuration so as to parse it.
			$tempSplit 		= $line.split()
			$ConfigName 	= $tempSplit[0] # Setting Name
			$ConfigValue 	= $tempSplit[2] # Setting Value
			
			# Temporary error messaage in case switch defaults.
			$tempErrMsg = ""
			
			# Switch with every config case
			switch ($ConfigName)
			{
				Time 		{ $RetrievedTime 		= $ConfigValue + " " + $tempSplit[3]; break }
				TimeZone 	{ $global:TimeZone 		= $ConfigValue; break }
				TimeFormat 	{ $RetrievedFormat		= $ConfigValue; break }
				DST		 	{ $RetrievedDST	 		= $ConfigValue; break }
				AlarmTime 	{ $RetrievedAlarm 		= $ConfigValue + " " + $tempSplit[3]; break }
				default 	{ $tempErrMsg 			= "Parsing Error with $ConfigName!"; break }
			}
			
			if ($tempErrMsg -ne "" -or $tempErrMsg -ne $null)
			{
				Add-Content $global:TracePath $tempErrMsg
			}
		}
		
		# Retrieving Format
		# ----------------------------------------
		# Converting time format to proper format.
		if ($RetrievedFormat -ceq "hh:mm")
		{
			$global:TimeFormat = "hh:mm tt"
		}
		elseif ($RetrievedFormat -ceq "hh:mm:ss")
		{
			$global:TimeFormat = "hh:mm:ss tt"
		}
		else
		{
			$global:TimeFormat = $RetrievedFormat
		}
		
		# Retrieving Time
		# ---------------------------------------
		# Converting long time string to DateTime
		$global:CurrentTime = [DateTime]::Parse($RetrievedTime)
		
		# Retrieving Alarm
		# ---------------------------------------
		# Must check if alarm is null.
		if ($RetrievedAlarm -eq "SUCH NULL")
		{
			$global:AlarmTime = $global:DefaultAlarmMsg
		}
		else
		{
			$global:AlarmTime = [DateTime]::Parse($RetrievedAlarm)
		}
		
		# Retrieving DST
		# ----------------------------------------
		if ($RetrievedDST -eq "False")
		{
			$global:DST = $false
		}
		elseif ($RetrievedDST -eq "True")
		{
			$global:DST = $true
		}
		else
		{
			$ErrorMessage = "Error occured at Retrieve-ConfigurationSettings whilst retrieving DST."
			Add-Content $global:TracePath $ErrorMessage
		}
	}
	
	function Save-Configuration
	{
		<#
		.SYNOPSIS
		Save-Configuration saves the application's time, time zone, time format, DST, and alarm settings.
		.NOTES
		The configuration file is setup in the following manner:
			NAME = VALUE
		#>
		
		# Function Variables
		# ==================
		$ClosingTime 	= ""
		$ClosingAlarm 	= ""
		$ClosingFormat 	= ""
		
		# Erasing previous configuration file.
		if (Test-Path $global:ConfigurationPath)
		{
			erase $global:ConfigurationPath
		}
		
		# Saving alarm time only if it isn't equal to null or default values.
		if ($global:AlarmTime -eq "" -or $global:AlarmTime -eq $null -or $global:AlarmTime -eq $global:DefaultAlarmMsg)
		{
			$global:AlarmTime = "SUCH NULL"
		}
		else
		{
			$ClosingAlarm = $global:AlarmTime.ToLongTimeString()
		}
		
		# Configuring Time Format
		# =======================
		if ($global:TimeFormat -eq "hh:mm:ss tt")
		{
			$ClosingFormat = "hh:mm:ss"
		}
		elseif ($global:TimeFormat -eq "hh:mm tt")
		{
			$ClosingFormat = "hh:mm"
		}
		else
		{
			$ClosingFormat = $global:TimeFormat
		}
		
		# Saving Settings
		# ===============
		try
		{
			$ClosingTime = $global:CurrentTime.ToLongTimeString()
			Add-Content $global:ConfigurationPath "Time = $ClosingTime"
			Add-Content $global:ConfigurationPath "TimeZone = $global:TimeZone"
			Add-Content $global:ConfigurationPath "TimeFormat = $ClosingFormat"
			Add-Content $global:ConfigurationPath "DST = $global:DST"
			Add-Content $global:ConfigurationPath "AlarmTime = $ClosingAlarm"
		}
		catch
		{
			$ErrorMessage = "Failed to save configuration settings!"
			Add-Content -Path $global:TracePath $ErrorMessage
		}
	}
	#endregion
	
	#region Control Helper Functions
	function Load-ComboBox 
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ComboBox.
	
		.DESCRIPTION
			Use this function to dynamically load items into the ComboBox control.
	
		.PARAMETER  ComboBox
			The ComboBox control you want to add items to.
	
		.PARAMETER  Items
			The object or objects you wish to load into the ComboBox's Items collection.
	
		.PARAMETER  DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER  Append
			Adds the item(s) to the ComboBox without clearing the Items collection.
		
		.EXAMPLE
			Load-ComboBox $combobox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Load-ComboBox $combobox1 "Red" -Append
			Load-ComboBox $combobox1 "White" -Append
			Load-ComboBox $combobox1 "Blue" -Append
		
		.EXAMPLE
			Load-ComboBox $combobox1 (Get-Process) "ProcessName"
	#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ComboBox]$ComboBox,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Items,
		    [Parameter(Mandatory=$false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if(-not $Append)
		{
			$ComboBox.Items.Clear()	
		}
		
		if($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [Array])
		{
			$ComboBox.BeginUpdate()
			foreach($obj in $Items)
			{
				$ComboBox.Items.Add($obj)	
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)	
		}
	
		$ComboBox.DisplayMember = $DisplayMember	
	}
	#endregion
	
	# ====================================
	#region Event Handling
	$formCCApp_FormClosing=[System.Windows.Forms.FormClosingEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.FormClosingEventArgs]
		Save-Configuration
	}
	
	$timerClock_Tick = {
		$global:CurrentTime = $global:CurrentTime.AddSeconds(1)
		$TimeNow = $global:CurrentTime
		$LabelTime.Text = $TimeNow.ToString($global:TimeFormat)
		
		if ($global:AlarmTime -ne $global:DefaultAlarmMsg)
		{
			if ($global:AlarmTime.ToLongTimeString() -eq $global:CurrentTime.ToLongTimeString())
			{
				try
				{
					Generate-Alarm
					$buttonStopAlarm.Enabled = $true
				}
				catch
				{
					$ErrorMessage = "Error occured at timerClock_Tick whilst trying to generate alarm."
					Add-Content $global:TracePath $ErrorMessage
				}
			}
		}
	}
	
	$buttonIncrement_Click = {
		try
		{
			$global:CurrentTime = $global:CurrentTime.AddMinutes(1)
			$LabelTime.Text = $global:CurrentTime.ToString($global:TimeFormat)
		}
		catch
		{
			$ErrorMessage = "Error occured trying to increment minutes!"
			Add-Content -Path $global:TracePath $ErrorMessage
		}
	}
	
	$buttonDecrement_Click={
		try
		{
			$global:CurrentTime = $global:CurrentTime.AddMinutes(-1)
			$LabelTime.Text = $global:CurrentTime.ToString($global:TimeFormat)
		}
		catch
		{
			$ErrorMessage = "Error occured trying to increment minutes!"
			Add-Content -Path $global:TracePath $ErrorMessage
		}
	}
	
	$buttonViewSettings_Click={
		if ($groupboxSetAlarm.Visible -eq $false)
		{
			$groupboxSetAlarm.Visible 	= $true
			$groupboxSettings.Visible   = $true
			$groupboxMisc.Visible		= $true
			$buttonViewSettings.Text 	= "Hide Settings"
		}
		else
		{
			$groupboxSetAlarm.Visible 	= $false
			$groupboxSettings.Visible 	= $false
			$groupboxMisc.Visible 		= $false
			$buttonViewSettings.Text 	= "View Settings"
		}
	}
	
	
	$buttonSettingSave_Click={
		# Event Variables
		# ===============
		$isHourReady 	= $false
		$isMinutesReady = $false
		$isAMPMReady 	= $false
		$isSaveReady 	= $false
		
		$hours 		= $comboboxSetHour.SelectedItem
		$minutes 	= $comboboxSetMinute.SelectedItem
		$ampm 		= $comboboxSetAMPM.SelectedItem
		
		if ($comboboxSetHour.SelectedItem)
		{
			$isHourReady = $true
		}
		if ($comboboxSetMinute.SelectedItem)
		{
			$isMinutesReady = $true
		}
		if ($comboboxSetAMPM.SelectedItem)
		{
			$isAMPMReady = $true
			
			# Set $ampm to true / false status for Change-Time
			if ($ampm -eq "AM")
			{
				$ampm = $true
			}
			elseif ($ampm -eq "PM")
			{
				$ampm = $false
			}
		}
		
		# Check if in 12 / 24 hour mode
		if ($comboboxSetAMPM.Visible -eq $true)
		{
			# Assume 12 hour mode
			# ===================
			if ($isHourReady -eq $true -and $isMinutesReady -eq $true -and $isAMPMReady -eq $true)
			{
				$isSaveReady = $true
			}
			
			# Change Time
			# ===========
			if ($isSaveReady -eq $true)
			{
				Change-Time -Hours $hours -Minutes $minutes -ampm $ampm
			}
		}
		elseif($comboboxSetAMPM.Visible -eq $false)
		{
			# Assume 24 hour mode
			# ===================
			if ($isHourReady -eq $true -and $isMinutesReady -eq $true)
			{
				$isSaveReady = $true
			}
			
			if ($isSaveReady -eq $true)
			{
				Change-Time -hours $hours -minutes $minutes
			}
		}
	}
	
	$buttonAlarmSave_Click = {
		
		# Event Variables
		# ======================================
		[boolean]$isAlarmHourReady 		= $false
		[boolean]$isAlarmMinuteReady 	= $false
		[boolean]$isAlarmAMPMReady 		= $false
		[boolean]$isAlarmSaveReady		= $false
		[boolean]$is24Mode				= $true # Assuming default status
		
		
		# Check whether app is in 24 or 12 hour mode
		# ==========================================
		if ($comboboxAMPM.Visible -eq $true)
		{
			$is24Mode = $false
		}
		
		# Check if all required fields are ready
		# ======================================
		if ($comboboxAlarmHour.SelectedItem)
		{
			$isAlarmHourReady = $true
		}
		if ($comboboxAlarmMinutes.SelectedItem)
		{
			$isAlarmMinuteReady = $true
		}
		if ($comboboxAMPM.SelectedItem)
		{
			$isAlarmAMPMReady = $true
		}
		
		# Determine which logic to pursue.
		# ================================
		if ($is24Mode -eq $true)
		{
			if ($isAlarmHourReady -eq $true -and $isAlarmMinuteReady -eq $true)
			{
				$isAlarmSaveReady = $true
			}
			
			# Proceed to set alarm.
			# =====================
			if ($isAlarmSaveReady -eq $true)
			{
				$hours = $comboboxAlarmHour.SelectedItem
				$minutes = $comboboxAlarmMinutes.SelectedItem
				Set-Alarm -Hours $hours -Minutes $minutes
			}
		}
		else
		{
			# Assume 12 hour mode
			# ===================
			if ($isAlarmHourReady -eq $true -and $isAlarmMinuteReady -eq $true -and $isAlarmAMPMReady -eq $true)
			{
				$isAlarmSaveReady = $true
			}
			
			# Proceed to set alarm.
			# =====================
			if ($isAlarmSaveReady -eq $true)
			{
				$hours = $comboboxAlarmHour.SelectedItem
				$minutes = $comboboxAlarmMinutes.SelectedItem
				$ampm = $comboboxAMPM.SelectedItem
				if ($ampm -eq "AM")
				{
					$ampm = $true
				}
				elseif ($ampm -eq "PM")
				{
					$ampm = $false
				}
				else
				{
					$ErrorMessage = "Error occured at AlarmSave_Click whilst figuring if AM / PM"
					Add-Content $global:TracePath $ErrorMessage
				}
				Set-Alarm -Hours $hours -Minutes $minutes -AMPM $ampm
			}
		}
	}
	
	$buttonStopAlarm_Click={
		Interrupt-Alarm
		$buttonStopAlarm.Enabled = $false
	}
	
	$buttonMiscSave_Click={
		# Event Variables
		# ===============
		
		# DST Event Handling
		# ==========================================
		# Check if DST combobox has a selected item.
		if ($comboboxDST.SelectedItem)
		{
			$isDST 		= $comboboxDST.SelectedItem
			$StatusDST 	= ""
			
			# Set the value of the combobox to $true or $false into a local variable
			# ----------------------------------------------------------------------
			if ($isDST -eq "False")
			{
				$StatusDST = $false
			}
			elseif ($isDST -eq "True")
			{
				$StatusDST = $true
			}
			else
			{
				$ErrorMessage = "Error occured at MiscSave_Click whilst identifying DST status."
				Add-Content $global:TracePath $ErrorMessage
			}
			
			# Check if user specified to change to a DST status that is already enabled.
			if ($global:DST -eq $StatusDST)
			{
				# Do nothing because there is no status change.
			}
			elseif ($global:DST -ne $StatusDST -and $StatusDST -eq $false)
			{
				# Disabling DST
				Set-DST -isDST $StatusDST
			}
			elseif ($global:DST -ne $StatusDST -and $StatusDST -eq $true)
			{
				# Enabling DST
				Set-DST -isDST $StatusDST
			}
		}
		
		# Clock Mode Handling
		# ==========================================
		# Check if clock mode drop down has an item.
		if ($comboboxClockMode.SelectedItem)
		{
			$is24 = $comboboxClockMode.SelectedItem
			$time_format = $global:TimeFormat
			
			if ($is24 -eq "24")
			{
				if ($time_format -ceq "HH:mm" -or $time_format -ceq "HH:mm:ss")
				{
					# Do nothing as 24 mode is already enabled
				}
				elseif ($time_format -ceq "hh:mm tt")
				{
					# Change to Hours : Minutes
					$global:TimeFormat = "HH:mm"
					# Display change immediately
					$LabelTime.Text = $global:CurrentTime.ToString($global:TimeFormat)
					
					# Make sure to hide visibility of 12 hour drop downs
					$comboboxAMPM.Visible 		= $false
					$comboboxSetAMPM.Visible 	= $false
					$labelAMPM.Visible 			= $false
					
					# Reload the appropriate comboboxes
					$comboboxSetHour.Items.Clear()
					$comboboxAlarmHour.Items.Clear()
					Identify-ClockMode
				}
				elseif ($time_format -ceq "hh:mm:ss tt")
				{
					# Change to Hours:Minutes:Seconds
					$global:TimeFormat = "HH:mm:ss"
					# Display change immediately
					$LabelTime.Text = $global:CurrentTime.ToString($global:TimeFormat)
					
					# Make sure to hide visibility of 12 hour drop downs
					$comboboxAMPM.Visible 		= $false
					$comboboxSetAMPM.Visible 	= $false
					$labelAMPM.Visible 			= $false
					
					# Reload the appropriate comboboxes
					$comboboxSetHour.Items.Clear()
					$comboboxAlarmHour.Items.Clear()
					Identify-ClockMode
				}
			}
			elseif ($is24 -eq "12")
			{
				if ($time_format -ceq "HH:mm")
				{
					# Change to Hours:Minutes
					$global:TimeFormat = "hh:mm tt"
					# Display change immediately
					$LabelTime.Text = $global:CurrentTime.ToString($global:TimeFormat)
					
					# Make sure to enable visibility of 12 hour drop downs
					$comboboxAMPM.Visible 		= $true
					$comboboxSetAMPM.Visible 	= $true
					$labelAMPM.Visible 			= $true
					
					# Reload the appropriate comboboxes
					$comboboxSetHour.Items.Clear()
					$comboboxAlarmHour.Items.Clear()
					Identify-ClockMode
				}
				elseif ($time_format -ceq "HH:mm:ss")
				{
					# Change to Hours:Minutes:Seconds
					$global:TimeFormat = "hh:mm:ss tt"
					# Display change immediately
					$LabelTime.Text = $global:CurrentTime.ToString($global:TimeFormat)
					
					# Make sure to enable visibility of 12 hour drop downs
					$comboboxAMPM.Visible 		= $true
					$comboboxSetAMPM.Visible 	= $true
					$labelAMPM.Visible 			= $true
					
					# Reload the appropriate comboboxes
					$comboboxSetHour.Items.Clear()
					$comboboxAlarmHour.Items.Clear()
					Identify-ClockMode
				}
			}
		}
		
		# Time Zone Handling
		# ==========================================
		# Check if timezone drop down has an item.
		if ($comboboxTimeZone.SelectedItem)
		{
			# Time Zone Handling Local Variables
			# ==================================
			$currentTZ = $global:TimeZone
			$futureTZ = $comboboxTimeZone.SelectedItem
			
			Select-TimeZone -current $currentTZ -future $futureTZ
		}
		
		# Enable / disable seconds
		# ========================
		if ($comboboxSetSeconds.SelectedItem)
		{
			# Local Variables
			# ===============
			$isSecond = $comboboxSetSeconds.SelectedItem
			$tformat = $global:TimeFormat
			
			if ($isSecond -eq "False")
			{
				# Seconds are to be disabled.
				# ---------------------------
				# Only disable if seconds are on.
				
				if ($tformat -ceq "HH:mm:ss")
				{
					# Remove seconds from 24-hour mode
					$global:TimeFormat = "HH:mm"
					
					# Update clock time
					$LabelTime.Text = $global:CurrentTime.ToString($global:TimeFormat)
				}
				elseif ($tformat -ceq "hh:mm:ss tt")
				{
					# Remove seconds from 12-hour mode
					$global:TimeFormat = "hh:mm tt"
					
					# Update clock time
					$LabelTime.Text = $global:CurrentTime.ToString($global:TimeFormat)
				}
			}
			elseif ($isSecond -eq "True")
			{
				# Seconds are to be enabled.
				# --------------------------
				# Only enable if seconds are off.
				if ($tformat -ceq "HH:mm")
				{
					# Enable seconds on 24-hour mode
					$global:TimeFormat = "HH:mm:ss"
					
					# Update clock time
					$LabelTime.Text = $global:CurrentTime.ToString($global:TimeFormat)
				}
				elseif ($tformat -ceq "hh:mm tt")
				{
					# Enable seconds on 12-hour mode
					$global:TimeFormat = "hh:mm:ss tt"
					
					# Update clock time
					$LabelTime.Text = $global:CurrentTime.ToString($global:TimeFormat)
				}
			}
		}
	}
	#endregion
	# ====================================
	
	#region Unnecessary Event Handlers
	$textboxAlarm_TextChanged = {
		#TODO: Place custom script here
		
	}
	
	$comboboxAlarmMinutes_SelectedIndexChanged = {
		#TODO: Place custom script here
		
	}
	
	$labelAlarm_Click = {
		#TODO: Place custom script here
		
	}
	
	$labelSetTime_Click = {
		#TODO: Place custom script here
		
	}
	
	$comboboxDST_SelectedIndexChanged = {
		#TODO: Place custom script here
		
	}
	
	$comboboxAlarmSeconds_SelectedIndexChanged = {
		#TODO: Place custom script here
		
	}
	
	$comboboxSetHour_SelectedIndexChanged = {
		#TODO: Place custom script here
		
	}
	
	$labelHours_Click = {
		#TODO: Place custom script here
		
	}
	
	$comboboxAMPM_SelectedIndexChanged = {
		#TODO: Place custom script here
		
	}
	
	$groupboxSettings_Enter = {
		#TODO: Place custom script here
		
	}
	
	$comboboxSetSeconds_SelectedIndexChanged = {
		#TODO: Place custom script here
		
	}
	#endregion
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formCCApp.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$comboboxSetSeconds.remove_SelectedIndexChanged($comboboxSetSeconds_SelectedIndexChanged)
			$buttonMiscSave.remove_Click($buttonMiscSave_Click)
			$comboboxDST.remove_SelectedIndexChanged($comboboxDST_SelectedIndexChanged)
			$buttonStopAlarm.remove_Click($buttonStopAlarm_Click)
			$buttonViewSettings.remove_Click($buttonViewSettings_Click)
			$buttonSettingSave.remove_Click($buttonSettingSave_Click)
			$labelHours.remove_Click($labelHours_Click)
			$comboboxSetHour.remove_SelectedIndexChanged($comboboxSetHour_SelectedIndexChanged)
			$groupboxSettings.remove_Enter($groupboxSettings_Enter)
			$textboxAlarm.remove_TextChanged($textboxAlarm_TextChanged)
			$buttonDecrement.remove_Click($buttonDecrement_Click)
			$buttonIncrement.remove_Click($buttonIncrement_Click)
			$comboboxAMPM.remove_SelectedIndexChanged($comboboxAMPM_SelectedIndexChanged)
			$buttonAlarmSave.remove_Click($buttonAlarmSave_Click)
			$comboboxAlarmMinutes.remove_SelectedIndexChanged($comboboxAlarmMinutes_SelectedIndexChanged)
			$labelAlarm.remove_Click($labelAlarm_Click)
			$formCCApp.remove_FormClosing($formCCApp_FormClosing)
			$formCCApp.remove_Load($formCCApp_Load)
			$timerClock.remove_Tick($timerClock_Tick)
			$formCCApp.remove_Load($Form_StateCorrection_Load)
			$formCCApp.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formCCApp.SuspendLayout()
	$groupboxMisc.SuspendLayout()
	$groupboxSettings.SuspendLayout()
	$groupboxSetAlarm.SuspendLayout()
	#
	# formCCApp
	#
	$formCCApp.Controls.Add($groupboxMisc)
	$formCCApp.Controls.Add($buttonStopAlarm)
	$formCCApp.Controls.Add($buttonViewSettings)
	$formCCApp.Controls.Add($groupboxSettings)
	$formCCApp.Controls.Add($textboxAlarm)
	$formCCApp.Controls.Add($buttonDecrement)
	$formCCApp.Controls.Add($buttonIncrement)
	$formCCApp.Controls.Add($groupboxSetAlarm)
	$formCCApp.Controls.Add($labelAlarm)
	$formCCApp.Controls.Add($LabelTime)
	$formCCApp.AutoScaleMode = 'None'
	$formCCApp.BackColor = 'Control'
	$formCCApp.BackgroundImageLayout = 'Center'
	$formCCApp.ClientSize = '586, 483'
	$formCCApp.FormBorderStyle = 'FixedSingle'
	#region Binary Data
	$formCCApp.Icon = [System.Convert]::FromBase64String('
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')
	#endregion
	$formCCApp.MaximizeBox = $False
	$formCCApp.MinimizeBox = $False
	$formCCApp.Name = "formCCApp"
	$formCCApp.Text = "Clock Application"
	$formCCApp.add_FormClosing($formCCApp_FormClosing)
	$formCCApp.add_Load($formCCApp_Load)
	#
	# groupboxMisc
	#
	$groupboxMisc.Controls.Add($labelSeconds)
	$groupboxMisc.Controls.Add($comboboxSetSeconds)
	$groupboxMisc.Controls.Add($buttonMiscSave)
	$groupboxMisc.Controls.Add($labelTimeZone)
	$groupboxMisc.Controls.Add($comboboxTimeZone)
	$groupboxMisc.Controls.Add($labelMisc)
	$groupboxMisc.Controls.Add($labelClockMode)
	$groupboxMisc.Controls.Add($comboboxClockMode)
	$groupboxMisc.Controls.Add($comboboxDST)
	$groupboxMisc.Controls.Add($labelDST)
	$groupboxMisc.Location = '291, 267'
	$groupboxMisc.Name = "groupboxMisc"
	$groupboxMisc.Size = '194, 207'
	$groupboxMisc.TabIndex = 33
	$groupboxMisc.TabStop = $False
	$groupboxMisc.Text = "Misc Settings"
	$groupboxMisc.Visible = $False
	#
	# labelSeconds
	#
	$labelSeconds.Location = '18, 132'
	$labelSeconds.Name = "labelSeconds"
	$labelSeconds.Size = '56, 23'
	$labelSeconds.TabIndex = 33
	$labelSeconds.Text = "Seconds?"
	$labelSeconds.TextAlign = 'MiddleRight'
	#
	# comboboxSetSeconds
	#
	$comboboxSetSeconds.DropDownStyle = 'DropDownList'
	$comboboxSetSeconds.FormattingEnabled = $True
	[void]$comboboxSetSeconds.Items.Add("True")
	[void]$comboboxSetSeconds.Items.Add("False")
	$comboboxSetSeconds.Location = '80, 132'
	$comboboxSetSeconds.Name = "comboboxSetSeconds"
	$comboboxSetSeconds.Size = '61, 21'
	$comboboxSetSeconds.TabIndex = 33
	$comboboxSetSeconds.add_SelectedIndexChanged($comboboxSetSeconds_SelectedIndexChanged)
	#
	# buttonMiscSave
	#
	$buttonMiscSave.Location = '5, 169'
	$buttonMiscSave.Name = "buttonMiscSave"
	$buttonMiscSave.Size = '182, 27'
	$buttonMiscSave.TabIndex = 33
	$buttonMiscSave.Text = "Save"
	$buttonMiscSave.UseVisualStyleBackColor = $True
	$buttonMiscSave.add_Click($buttonMiscSave_Click)
	#
	# labelTimeZone
	#
	$labelTimeZone.Location = '7, 108'
	$labelTimeZone.Name = "labelTimeZone"
	$labelTimeZone.Size = '67, 18'
	$labelTimeZone.TabIndex = 32
	$labelTimeZone.Text = "Time Zone"
	$labelTimeZone.TextAlign = 'TopRight'
	#
	# comboboxTimeZone
	#
	$comboboxTimeZone.DropDownStyle = 'DropDownList'
	$comboboxTimeZone.FormattingEnabled = $True
	$comboboxTimeZone.Location = '80, 105'
	$comboboxTimeZone.Name = "comboboxTimeZone"
	$comboboxTimeZone.Size = '61, 21'
	$comboboxTimeZone.TabIndex = 31
	#
	# labelMisc
	#
	$labelMisc.Font = "Microsoft Sans Serif, 12pt, style=Bold"
	$labelMisc.Location = '41, 17'
	$labelMisc.Name = "labelMisc"
	$labelMisc.Size = '100, 23'
	$labelMisc.TabIndex = 28
	$labelMisc.Text = "Misc."
	$labelMisc.TextAlign = 'MiddleCenter'
	#
	# labelClockMode
	#
	$labelClockMode.Location = '7, 79'
	$labelClockMode.Name = "labelClockMode"
	$labelClockMode.Size = '67, 18'
	$labelClockMode.TabIndex = 24
	$labelClockMode.Text = "Clock Mode"
	$labelClockMode.TextAlign = 'TopRight'
	#
	# comboboxClockMode
	#
	$comboboxClockMode.DropDownStyle = 'DropDownList'
	$comboboxClockMode.FormattingEnabled = $True
	[void]$comboboxClockMode.Items.Add("12")
	[void]$comboboxClockMode.Items.Add("24")
	$comboboxClockMode.Location = '80, 76'
	$comboboxClockMode.Name = "comboboxClockMode"
	$comboboxClockMode.Size = '61, 21'
	$comboboxClockMode.TabIndex = 25
	#
	# comboboxDST
	#
	$comboboxDST.DropDownStyle = 'DropDownList'
	$comboboxDST.FormattingEnabled = $True
	[void]$comboboxDST.Items.Add("True")
	[void]$comboboxDST.Items.Add("False")
	$comboboxDST.Location = '80, 49'
	$comboboxDST.Name = "comboboxDST"
	$comboboxDST.Size = '61, 21'
	$comboboxDST.TabIndex = 22
	$comboboxDST.add_SelectedIndexChanged($comboboxDST_SelectedIndexChanged)
	#
	# labelDST
	#
	$labelDST.Location = '33, 52'
	$labelDST.Name = "labelDST"
	$labelDST.Size = '41, 18'
	$labelDST.TabIndex = 23
	$labelDST.Text = "DST?"
	$labelDST.TextAlign = 'TopRight'
	#
	# buttonStopAlarm
	#
	$buttonStopAlarm.Enabled = $False
	$buttonStopAlarm.Location = '279, 158'
	$buttonStopAlarm.Name = "buttonStopAlarm"
	$buttonStopAlarm.Size = '94, 36'
	$buttonStopAlarm.TabIndex = 22
	$buttonStopAlarm.Text = "Stop Alarm"
	$buttonStopAlarm.UseVisualStyleBackColor = $True
	$buttonStopAlarm.add_Click($buttonStopAlarm_Click)
	#
	# buttonViewSettings
	#
	$buttonViewSettings.Location = '437, 158'
	$buttonViewSettings.Name = "buttonViewSettings"
	$buttonViewSettings.Size = '130, 36'
	$buttonViewSettings.TabIndex = 21
	$buttonViewSettings.Text = "View Settings"
	$buttonViewSettings.UseVisualStyleBackColor = $True
	$buttonViewSettings.add_Click($buttonViewSettings_Click)
	#
	# groupboxSettings
	#
	$groupboxSettings.Controls.Add($comboboxSetAMPM)
	$groupboxSettings.Controls.Add($labelAMPM)
	$groupboxSettings.Controls.Add($buttonSettingSave)
	$groupboxSettings.Controls.Add($labelMinutes)
	$groupboxSettings.Controls.Add($label1)
	$groupboxSettings.Controls.Add($labelHours)
	$groupboxSettings.Controls.Add($comboboxSetMinute)
	$groupboxSettings.Controls.Add($comboboxSetHour)
	$groupboxSettings.Location = '60, 267'
	$groupboxSettings.Name = "groupboxSettings"
	$groupboxSettings.Size = '196, 207'
	$groupboxSettings.TabIndex = 20
	$groupboxSettings.TabStop = $False
	$groupboxSettings.Text = "Time Settings"
	$groupboxSettings.Visible = $False
	$groupboxSettings.add_Enter($groupboxSettings_Enter)
	#
	# comboboxSetAMPM
	#
	$comboboxSetAMPM.DropDownStyle = 'DropDownList'
	$comboboxSetAMPM.FormattingEnabled = $True
	[void]$comboboxSetAMPM.Items.Add("AM")
	[void]$comboboxSetAMPM.Items.Add("PM")
	$comboboxSetAMPM.Location = '76, 110'
	$comboboxSetAMPM.Name = "comboboxSetAMPM"
	$comboboxSetAMPM.Size = '56, 21'
	$comboboxSetAMPM.TabIndex = 32
	$comboboxSetAMPM.Visible = $False
	#
	# labelAMPM
	#
	$labelAMPM.Location = '17, 108'
	$labelAMPM.Name = "labelAMPM"
	$labelAMPM.Size = '53, 23'
	$labelAMPM.TabIndex = 31
	$labelAMPM.Text = "AM PM"
	$labelAMPM.TextAlign = 'MiddleRight'
	$labelAMPM.Visible = $False
	#
	# buttonSettingSave
	#
	$buttonSettingSave.Location = '6, 169'
	$buttonSettingSave.Name = "buttonSettingSave"
	$buttonSettingSave.Size = '184, 27'
	$buttonSettingSave.TabIndex = 30
	$buttonSettingSave.Text = "Save"
	$buttonSettingSave.UseVisualStyleBackColor = $True
	$buttonSettingSave.add_Click($buttonSettingSave_Click)
	#
	# labelMinutes
	#
	$labelMinutes.Location = '11, 78'
	$labelMinutes.Name = "labelMinutes"
	$labelMinutes.Size = '53, 23'
	$labelMinutes.TabIndex = 28
	$labelMinutes.Text = "Minute(s)"
	$labelMinutes.TextAlign = 'MiddleRight'
	#
	# label1
	#
	$label1.Font = "Microsoft Sans Serif, 12pt, style=Bold"
	$label1.Location = '26, 19'
	$label1.Name = "label1"
	$label1.Size = '100, 23'
	$label1.TabIndex = 27
	$label1.Text = "Time"
	$label1.TextAlign = 'MiddleCenter'
	#
	# labelHours
	#
	$labelHours.Location = '11, 48'
	$labelHours.Name = "labelHours"
	$labelHours.Size = '53, 23'
	$labelHours.TabIndex = 26
	$labelHours.Text = "Hour"
	$labelHours.TextAlign = 'MiddleRight'
	$labelHours.add_Click($labelHours_Click)
	#
	# comboboxSetMinute
	#
	$comboboxSetMinute.DropDownStyle = 'DropDownList'
	$comboboxSetMinute.FormattingEnabled = $True
	[void]$comboboxSetMinute.Items.Add("0")
	[void]$comboboxSetMinute.Items.Add("1")
	[void]$comboboxSetMinute.Items.Add("2")
	[void]$comboboxSetMinute.Items.Add("3")
	[void]$comboboxSetMinute.Items.Add("4")
	[void]$comboboxSetMinute.Items.Add("5")
	[void]$comboboxSetMinute.Items.Add("6")
	[void]$comboboxSetMinute.Items.Add("7")
	[void]$comboboxSetMinute.Items.Add("8")
	[void]$comboboxSetMinute.Items.Add("9")
	[void]$comboboxSetMinute.Items.Add("10")
	[void]$comboboxSetMinute.Items.Add("11")
	[void]$comboboxSetMinute.Items.Add("12")
	[void]$comboboxSetMinute.Items.Add("13")
	[void]$comboboxSetMinute.Items.Add("14")
	[void]$comboboxSetMinute.Items.Add("15")
	[void]$comboboxSetMinute.Items.Add("16")
	[void]$comboboxSetMinute.Items.Add("17")
	[void]$comboboxSetMinute.Items.Add("18")
	[void]$comboboxSetMinute.Items.Add("19")
	[void]$comboboxSetMinute.Items.Add("20")
	[void]$comboboxSetMinute.Items.Add("21")
	[void]$comboboxSetMinute.Items.Add("22")
	[void]$comboboxSetMinute.Items.Add("23")
	[void]$comboboxSetMinute.Items.Add("24")
	[void]$comboboxSetMinute.Items.Add("25")
	[void]$comboboxSetMinute.Items.Add("26")
	[void]$comboboxSetMinute.Items.Add("27")
	[void]$comboboxSetMinute.Items.Add("28")
	[void]$comboboxSetMinute.Items.Add("29")
	[void]$comboboxSetMinute.Items.Add("30")
	[void]$comboboxSetMinute.Items.Add("31")
	[void]$comboboxSetMinute.Items.Add("32")
	[void]$comboboxSetMinute.Items.Add("33")
	[void]$comboboxSetMinute.Items.Add("34")
	[void]$comboboxSetMinute.Items.Add("35")
	[void]$comboboxSetMinute.Items.Add("36")
	[void]$comboboxSetMinute.Items.Add("37")
	[void]$comboboxSetMinute.Items.Add("38")
	[void]$comboboxSetMinute.Items.Add("39")
	[void]$comboboxSetMinute.Items.Add("40")
	[void]$comboboxSetMinute.Items.Add("41")
	[void]$comboboxSetMinute.Items.Add("42")
	[void]$comboboxSetMinute.Items.Add("43")
	[void]$comboboxSetMinute.Items.Add("44")
	[void]$comboboxSetMinute.Items.Add("45")
	[void]$comboboxSetMinute.Items.Add("46")
	[void]$comboboxSetMinute.Items.Add("47")
	[void]$comboboxSetMinute.Items.Add("48")
	[void]$comboboxSetMinute.Items.Add("49")
	[void]$comboboxSetMinute.Items.Add("50")
	[void]$comboboxSetMinute.Items.Add("51")
	[void]$comboboxSetMinute.Items.Add("52")
	[void]$comboboxSetMinute.Items.Add("53")
	[void]$comboboxSetMinute.Items.Add("54")
	[void]$comboboxSetMinute.Items.Add("55")
	[void]$comboboxSetMinute.Items.Add("56")
	[void]$comboboxSetMinute.Items.Add("57")
	[void]$comboboxSetMinute.Items.Add("58")
	[void]$comboboxSetMinute.Items.Add("59")
	$comboboxSetMinute.Location = '76, 78'
	$comboboxSetMinute.Name = "comboboxSetMinute"
	$comboboxSetMinute.Size = '56, 21'
	$comboboxSetMinute.TabIndex = 18
	#
	# comboboxSetHour
	#
	$comboboxSetHour.DropDownStyle = 'DropDownList'
	$comboboxSetHour.FormattingEnabled = $True
	$comboboxSetHour.Location = '76, 48'
	$comboboxSetHour.Name = "comboboxSetHour"
	$comboboxSetHour.Size = '56, 21'
	$comboboxSetHour.TabIndex = 17
	$comboboxSetHour.add_SelectedIndexChanged($comboboxSetHour_SelectedIndexChanged)
	#
	# textboxAlarm
	#
	$textboxAlarm.BackColor = 'ActiveCaption'
	$textboxAlarm.Location = '136, 167'
	$textboxAlarm.Name = "textboxAlarm"
	$textboxAlarm.ReadOnly = $True
	$textboxAlarm.Size = '137, 20'
	$textboxAlarm.TabIndex = 15
	$textboxAlarm.add_TextChanged($textboxAlarm_TextChanged)
	#
	# buttonDecrement
	#
	#region Binary Data
	$buttonDecrement.BackgroundImage = [System.Convert]::FromBase64String('
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')
	#endregion
	$buttonDecrement.BackgroundImageLayout = 'Zoom'
	$buttonDecrement.Location = '19, 46'
	$buttonDecrement.Name = "buttonDecrement"
	$buttonDecrement.Size = '111, 72'
	$buttonDecrement.TabIndex = 13
	$buttonDecrement.UseVisualStyleBackColor = $True
	$buttonDecrement.add_Click($buttonDecrement_Click)
	#
	# buttonIncrement
	#
	#region Binary Data
	$buttonIncrement.BackgroundImage = [System.Convert]::FromBase64String('
iVBORw0KGgoAAAANSUhEUgAAAIcAAACHCAYAAAA850oKAAAABGdBTUEAALGPC/xhBQAAAAlwSFlz
AAAOvAAADrwBlbxySQAAAAd0SU1FB+ADEBYZHFqDtvgAABIbSURBVHhe7Z35dxTHEYD5W/Je7sRx
Yhwbx3fAXOEyGIwkbGwEGCzuS0ISh0ASSOgACRCHOMWN8QUGbCd2XvKSYJBAYIEkdN8XBuyX4Ngx
la6e7Z2enp7ZWaGRpu3+4WN2i9VT79anqprZ3ZlBAKDRSJEGVaTjv91w/tansLV1PxS07O13Tnaf
gar/1JGlyNenItKgavz19r/g4YvD4aGLL8DvLo0cEPD3//zCc5DWkE+WJF+nakiDqnCf8H7Px/Ab
Byl+6zPy3zkCEqpTyfLka1YJaVAlRlydZkvO4NKRMPzqeJhaGQOxhJgQeDu2MrZPiLkRB2MrJsHj
ZaNtovz0wjPw0Rd/I8uTr1kVpEFVqPp3DS3lLCmPlI6Clypi4Ozd3fCPr87A3778BP5698/w6d2P
CR/BJ5QP4S/InfPw5zvnKB/fOUv56M4HlA/vnIEPb5+G84Rzt9+nnL39Hnxw+104Q3kHThM+un0S
/vLlPlhQNxuGEEnYOlDQFbUZZInydauCNKgKRzrfgV999sdwUmbXxMPfvzwHx0h8f8cJ2Nd+Ava2
H6fsaT8Gxe1HKbvbjsCutsOUnW2HYEdrCRQRtrcehG2tByg42Ba27KPD5hbKHtjcUgz5zcWQ17wb
cpt3EXZCfstuONJVAtmtyVROtpZXbyyC+3Bfum5VkAZVoaTzbSLHUJqMJ8vGwLk7B+FQ5yk40HFS
kONYWA6bGG2GGDI52J6Imxw5hE3NO0hlOQYzqqeH5Xi9cqmWYyDh5ZhWFUfaxfmwGKYcxzzJIasa
hZwYWzgxmBwoBpWjaQf5mT2wqzNdyxEUeDnSW5bA2S9MOZyqBpMDxWBybO9lS2FiZDcVQQ7ZHuop
gMdK/6TlCAK8HHltK+H9W2dts0bvq8a+kBh7qRiR5MDWcqi7EIZoOYKBKMd7tz6IatZwk8O9ahgt
BcVgcmQTOQ53b9VyBAWbHD0fRBTDS9UwxTCqBorhVjWyaOUo0nIECVGOd3vOWMTw0k6YHCgGk4OJ
4TZrIEwMJFvLESzkckQvhpd2wuRgYvBVI6tpO2Q1b9czR5AQ5Xin53RYij4RIyQHmzNk7QTF2Ni0
TcsRNKxyJMGpnvc9zRiRxHBrJ+EBVJAD0XIECJkcDyoGSiETA3ESY0PjVnJ7G5R0F2g5goIox1vd
79mk6Asx+DnDkMIqRiYBb2s5AoQ4c7zV/a6jGLwU0bQSsZ3IxEA2NG3VcgQJUY6TRA6xjTApRDEM
KR68YiAZjYWQ2VSo5QgSohwnut+WthAmhrVamGJYpTDFsFYLuxgZITEyGgsgo6lAyxEkRDmOd71t
E4NJEamNiBXDbfjkKwaKkc7k6NJyBAZRjmNdb0WoFlYpZG0EpYhWjPUNW8h2C5Fji5YjKFjlSIKj
RA46V7S4txBRCpkYohRmKzGlYGKsa9gM6xs3w8FuLUdgEOU40nnSoYWYA6dVjMjzhXXGkIuBX0dY
R+XYrOUICqIchzuPh4QwK4XbXOE0W4htxJDC2kZ4MQw58rUcQYKXI5fIUdJ5LKIUYqUQWwgvRaRq
wVjbkEe2eXBAyxEcZHJEkqIvqwUTY019Lt1qOQKEKMeBzqOcEPb24TRXoBBmtTCl4MVwkgJZjduG
XCJHvpYjKNjk6DgcrhIIypDTZHwoR6wS+EYZkwJxqxRuYqyqzyFsIrdztBxBwipHIuzvOBSxUsiq
hShGpGqBlQJhYiCrG1COPC1HUBDl2EvksFaJ6IVwkoIXw5DCECO1PhtS6rLpdr+uHMFBbCt7Og4K
Usj2PhBjnkBQhvSGAmn7QFj7MKTgq4UhBIqRXJcFKfVZsL9LV47AwMuBxzmK2w+YVaKJHzKjqxSI
WwvhpUBW1m0k97UcgUKsHLvb90uEMPc6RCEitQ8nKZgYKEWY+g1EjlwtR1AQ5djVvi8khCkFsp60
DbfWYUjhpX3YpUiq2wCJtZl0u68rR8sRFMSBdGf7XipDtFXClAKF8FYpmBQInosjsS6TyKErR2AQ
5ShqK3aUQRTC2jasQshmClEKFAJZTkknsQzYqytHcBDl2N662yaEKYVRIRBsG4YYKASKYQiByFoH
LwVKIIrB0HIECFGOba27OBnMlsEqhVuVcGod8kphSLGsdj1laY2x3du1ScsRFEQ5trbtDIsgaxsy
GdyrhCGFkxBLatZRFtekwVItR7AQ5Shs3UEk4IVAzJbBpEBEIWRSiK0DBbCLsZaypDYN9nRmazmC
Ai9HTtsKKGgpIjKYFeJBq4RYKZgUWCkMDDEWhbZajgAhyrG5dbtFBC8yyCqEVyEW3lxDWXBzNbm/
hsiRpeUICqIc+S3bbDIwIZxbhrMUiz1IgczHbc1qKNZyBAerHImQ11IYlQxMCL5COFYJUhlEIZB5
N1cRUklslZYjSBztfJfIYZykNrc1EXKbCzzJ4FUIViWchEASqlMoeJuXY0blMrJE+bpVwXLn5n/q
4b2eD+mHZNhRxqCCR0Ljrs+nVysw5FgBm5q3eBKCSSEKYVYJNykQQwaU4s0QCSS2u3NjWI7nr0yR
rjuI4Ok5/3H3ElHAQY6SjlOOVx9QAUOOzWER3KuDvEKIQpgyWKsEE2JudTJlTvVKePPmSiLHhrAc
qoHna8fnyHxA6D8nuk7DLz573vZg3OL5vAeTbdDJJQNpVnN+WAS3yuAkQ7RCMN6oSqLbYiLHE2Vj
pOsLFCSnj1waBb+7aOSYgVUYn1tYjnvffT1oaPlUy4N+T354etV0SGtaDoUdaVDUuT5qtveKdVY6
nNkmcPKLPFjfuMmTEEwKJsSDSIHMrkok20Q42JUHhe1roKB9tY0t7atcSA2zWaQNSaHg/+e0JcGG
1iWQ2bq412S0LIY1TfMhoXYmPHV5rCX3KMjd/31lyHHn27uDnigbz4nxJ/JkUqCkqxjWNGRBav1G
SIkWsqfgRrKElZRMC0l1GVISyRzBWEHaB7Kcto+0sAhu1aG3MohCzKpaQZkZ2s6pTiQ/m0R+LpHe
Rt6oXmFQtZz8zDLKrBAzq5ZCfNUSiK80mFG5mOzlLKK8RllImX5jAWEhjLg6lVamB2XI5TFUipjK
WCjuToXR1yaH8//ri8PgcOc7tHoM6v7m1nH2H1huMluWwc6ObfTF5vs3P+CZg5457HkiNAPYMVuB
vSU4VwJRgsgiGDLglZR6I4MohMFySjzZO0FwLwV3Y5HXSMINFpPkGuClNpBXSLKnURZQcLiOvT6P
EsMRe2MeGW5fpm2Atfq+5IXyiaQ7JMLjoVnpN6RyJNVusMqBVxt6rnw8HO0posmSJ7H3iMk3ESWw
iuBVhkiVwa06+CkFE8MuhZsYCTCpYjYML4/1fSeBDqJ1M8kY8Sq9j3Lg4QCbHFhetrblhxLUV1gT
LeKW+EgCWCVwF8GtOiCRZTCE4GWIvkpYhWBSsCoxlUjxUsUcePaKWeb9BvM+4frLkN68iN53lCOu
8hXIbt5kS1i00KRLkizCJ91b8uUC2EUwK4JbVZDJYAphVAavQvAVYnpICFnrEIVA8P/wWnVPXn6R
/iX70T7cGFb+IuzsSqa3XeXY2LyRJmUBTZ48qTLYY2UJFxEFYLiJQGUQhJBVBZkMDLsQkdsFk8Iu
RO+qBBMDtxM/nwUjyqfBo6Tf97cQPEPLJ8Cu7hR621WODUSOBFuS+gprsnn4pMuSLwrgRQL3yiCX
QawOThWiN0Jg28Dt+M/jYQi3hzjQeJYjsylTmqjeMo+7LSabISbdLfEMXgBeAmcR7G2CyYBbJxFE
GXBrbRlWIXgZGLE35pNZ4g14jswSA10lZHiWI4PIgcmRJTFa5lLsiecRk+6EkwjOMsiFYJWBrw6m
EPbqwKRwE0ImBVaJSUSI0VdfhcfLxoXfAwoinuVIb0qHNyTJ6Wv4ZPOIiReTbxdALoGTCLLqIIog
l8EQQpSBCcFaBu6GDi+PoxWCHqIOJSDIeJZjXeP6cFL4pM2pIkmVwD+GT2gkxIQz3BIvJn9maBtZ
ArsIr3EiOFeGhWEZZNUhFuPkcXhMYlj5VPhD2QT6OgatbUTCsxxpjetoUmSJ6wvsyWdYJRBFYPAi
eJGBCsFJEVkI93aBTK6YCy+SPQ08cvkwEeHhS8FtGV7wLMfaxjSIlyTqQZElmiEmXEy6PPmCAKHk
e5PAXQReBmwXeH9KxRwqA7aLwYq0C694lmNNw1ppsqLBTDifXEy4iCzhDDPxLPnYChh4oOlVKgET
wRBALoGxRQGmhRAlYMSRPQtsFZOJDHhg6o9XptDZAQdK1dqFVzzLsaphNU2OmdRokSVahpl4EbEK
IHwlcK4GhgQ8rCrwlcEqRAJtExPJ3DDq6ivwWOkY+gJhq/i+yiDiWY7UhlXkxZcnqK8QE83Dkt6b
5PMCiBKwvQkcIvGdzpFEBNzFxI8oDL402vaC/ZDwKMc0SKlPtSWo71gUSrBbwo1Y3HVymyTSxBCB
Tz4mmiWfl8FoDcaBJzwaOaw8hu5N4OdWsBp8n1tEb/AsR3J9Cu251uT1Bj7hcmgSSYJF6F93KOEM
lngrCWRQnEvnAzzgNP7zGbQiDKZHIUeS1tD/b2KpiGc5kuqS6QvPJ0aWQB7+sV6xJ9rAPJgUeiwR
CEGRJpAq8EJ5HH1fAmcDZHDpaGUONgUVz3KsrDfk6A1G4tlfvgEr8ViN2G3s+fi5BXxXcuy1GXQQ
xD2DF8pj6Qdcnrn8EjxLwJmAtQFc9A9pSOxPPMsxoxo/dDqJvicQLfhB5adJUhlPXZ5I/6rZriAP
JpnBL1TT/3iSI5bIMfVGrE7YDwwth8YRLYfGES2HxhEth8YRLYfGEU9yTK2MI3LEaTl+YAy7OhGK
upLhEXLbUY4R1ybCvNpZ8Fvh29ea7y+Y98nXYyC1aR69L5UDeerKOMjvWAGPlal5jglNL7g4ElY0
zIWXbsTQ+45yIHNr4mFt03x4tNT44i6apQr88xgoZOsKKrhe/JhGTttSkm/jYwv43Vw8CyOVA8/F
gF/DY08O+w6alNu2HGZUT4cJFS/D2M+nBJ4x16YMcMUbBcOvTZKuLWiMIdB34BsTiBjL4Nkr5hes
fnVxKJy/9akhxzf3vx006qrxDWsGCoI/gN+8XkV60bqWhYHnyO00GEeeNP88+pPBpSOhqDMZ0lsW
S9cXJNKaFsCbNTNhePkkum7+eTxWOpaKQeXAfxruNcPPLjxreRArOyqAMme3LoHxFQMpxyhanlU9
JxiCp/7CK1xZ5ED+ebeUfl4Ce86vSWnBM7wEHRye2BMLghybODlwXntIsuYgguvEj0kUtOwJi4GE
bzDufXdv0Nlbn8DxrjOB5gQBzyz0UOjkJkGTAz/CcLzrtG3dweI0fR2bv26VnlDXFlAJPHcVO0lt
0OTAr2WI61UNaVAV+NNbB00O/JqGPr31AKLl8BdpUBW0HP4iDaqClsNfpEFV0HL4izSoCloOf5EG
VUHL4S/SoCpoOfxFGlQFLYe/SIOqoOXwF2lQFbQc/iINqoKWw1+kQVXQcviLNKgKWg5/kQZVQcvh
L9KgKmg5/EUaVAUth79Ig6qg5fAXaVAVtBz+Ig2qgpbDX6RBVdBy+Is0qApaDn+RBlVBy+Ev0qAq
aDn8RRpUBS2Hv0iDqqDl8BdpUBW0HP4iDaqClsNfpEFV0HL4izSoCloOf5EGVUHL4S/SoCpoOfxF
GlQFLYe/SIOqoOXwF2lQFbQc/iINqoKWw1+kQVXQcviLNKgKvBzrmxfA5OuxloT1J49eGgX57cvD
p9jWcgwwvBzx1a/DwtrZloT1J09fGQdbO5PgEVJB8L6WY4Ap6TwVluOZy+NgS0ciPFpmnP2/P8Hr
5uJJ5ufXzgzHtBwDzKnuc/DL0ElqkXl1s2Bt0wJ4omwMPb10f1wSBM+7PqP6NchqW0LmDlPM1yuX
kCXK160K0qAqdH3Tc+nnnz0XTgj+Bc+piacVZH7tLHq9OrwKkR9MIcyqeR0yWxbDRjIMP1E6NrwO
vOJ2WkMeWaJ83aogDarE1OtvhpPCwP4/4tokekHDaZWv9D1VhBvTYMy1yfB8+QQYLPz+H194Gir/
fZMsT75mVZAGVeE+4cpXFfCTC89YkoPIWkDfY7Qt/vfiDLSjrYQsT75mlZAGVaP56zYYfW06PFn2
Ip0B+GT1F0PKxsHQKy8DDsni+lRFGlQRvOIUXpKs65tbl3AW6W9uf3v3R/e++1q6NjWBQf8HPqIa
2iZ6m/sAAAAASUVORK5CYII=')
	#endregion
	$buttonIncrement.BackgroundImageLayout = 'Zoom'
	$buttonIncrement.Location = '445, 33'
	$buttonIncrement.Name = "buttonIncrement"
	$buttonIncrement.Size = '122, 85'
	$buttonIncrement.TabIndex = 12
	$buttonIncrement.UseVisualStyleBackColor = $True
	$buttonIncrement.add_Click($buttonIncrement_Click)
	#
	# groupboxSetAlarm
	#
	$groupboxSetAlarm.Controls.Add($comboboxAMPM)
	$groupboxSetAlarm.Controls.Add($buttonAlarmSave)
	$groupboxSetAlarm.Controls.Add($comboboxAlarmMinutes)
	$groupboxSetAlarm.Controls.Add($comboboxAlarmHour)
	$groupboxSetAlarm.Location = '60, 207'
	$groupboxSetAlarm.Name = "groupboxSetAlarm"
	$groupboxSetAlarm.Size = '425, 54'
	$groupboxSetAlarm.TabIndex = 11
	$groupboxSetAlarm.TabStop = $False
	$groupboxSetAlarm.Text = "Set Alarm"
	$groupboxSetAlarm.Visible = $False
	#
	# comboboxAMPM
	#
	$comboboxAMPM.DropDownStyle = 'DropDownList'
	$comboboxAMPM.FormattingEnabled = $True
	[void]$comboboxAMPM.Items.Add("AM")
	[void]$comboboxAMPM.Items.Add("PM")
	$comboboxAMPM.Location = '188, 19'
	$comboboxAMPM.Name = "comboboxAMPM"
	$comboboxAMPM.Size = '78, 21'
	$comboboxAMPM.TabIndex = 11
	$comboboxAMPM.Visible = $False
	$comboboxAMPM.add_SelectedIndexChanged($comboboxAMPM_SelectedIndexChanged)
	#
	# buttonAlarmSave
	#
	$buttonAlarmSave.Location = '285, 20'
	$buttonAlarmSave.Name = "buttonAlarmSave"
	$buttonAlarmSave.Size = '133, 20'
	$buttonAlarmSave.TabIndex = 10
	$buttonAlarmSave.Text = "Save"
	$buttonAlarmSave.UseVisualStyleBackColor = $True
	$buttonAlarmSave.add_Click($buttonAlarmSave_Click)
	#
	# comboboxAlarmMinutes
	#
	$comboboxAlarmMinutes.DropDownStyle = 'DropDownList'
	$comboboxAlarmMinutes.FormattingEnabled = $True
	[void]$comboboxAlarmMinutes.Items.Add("0")
	[void]$comboboxAlarmMinutes.Items.Add("1")
	[void]$comboboxAlarmMinutes.Items.Add("2")
	[void]$comboboxAlarmMinutes.Items.Add("3")
	[void]$comboboxAlarmMinutes.Items.Add("4")
	[void]$comboboxAlarmMinutes.Items.Add("5")
	[void]$comboboxAlarmMinutes.Items.Add("6")
	[void]$comboboxAlarmMinutes.Items.Add("7")
	[void]$comboboxAlarmMinutes.Items.Add("8")
	[void]$comboboxAlarmMinutes.Items.Add("9")
	[void]$comboboxAlarmMinutes.Items.Add("10")
	[void]$comboboxAlarmMinutes.Items.Add("11")
	[void]$comboboxAlarmMinutes.Items.Add("12")
	[void]$comboboxAlarmMinutes.Items.Add("13")
	[void]$comboboxAlarmMinutes.Items.Add("14")
	[void]$comboboxAlarmMinutes.Items.Add("15")
	[void]$comboboxAlarmMinutes.Items.Add("16")
	[void]$comboboxAlarmMinutes.Items.Add("17")
	[void]$comboboxAlarmMinutes.Items.Add("18")
	[void]$comboboxAlarmMinutes.Items.Add("19")
	[void]$comboboxAlarmMinutes.Items.Add("20")
	[void]$comboboxAlarmMinutes.Items.Add("21")
	[void]$comboboxAlarmMinutes.Items.Add("22")
	[void]$comboboxAlarmMinutes.Items.Add("23")
	[void]$comboboxAlarmMinutes.Items.Add("24")
	[void]$comboboxAlarmMinutes.Items.Add("25")
	[void]$comboboxAlarmMinutes.Items.Add("26")
	[void]$comboboxAlarmMinutes.Items.Add("27")
	[void]$comboboxAlarmMinutes.Items.Add("28")
	[void]$comboboxAlarmMinutes.Items.Add("29")
	[void]$comboboxAlarmMinutes.Items.Add("30")
	[void]$comboboxAlarmMinutes.Items.Add("31")
	[void]$comboboxAlarmMinutes.Items.Add("32")
	[void]$comboboxAlarmMinutes.Items.Add("33")
	[void]$comboboxAlarmMinutes.Items.Add("34")
	[void]$comboboxAlarmMinutes.Items.Add("35")
	[void]$comboboxAlarmMinutes.Items.Add("36")
	[void]$comboboxAlarmMinutes.Items.Add("37")
	[void]$comboboxAlarmMinutes.Items.Add("38")
	[void]$comboboxAlarmMinutes.Items.Add("39")
	[void]$comboboxAlarmMinutes.Items.Add("40")
	[void]$comboboxAlarmMinutes.Items.Add("41")
	[void]$comboboxAlarmMinutes.Items.Add("42")
	[void]$comboboxAlarmMinutes.Items.Add("43")
	[void]$comboboxAlarmMinutes.Items.Add("44")
	[void]$comboboxAlarmMinutes.Items.Add("45")
	[void]$comboboxAlarmMinutes.Items.Add("46")
	[void]$comboboxAlarmMinutes.Items.Add("47")
	[void]$comboboxAlarmMinutes.Items.Add("48")
	[void]$comboboxAlarmMinutes.Items.Add("49")
	[void]$comboboxAlarmMinutes.Items.Add("50")
	[void]$comboboxAlarmMinutes.Items.Add("51")
	[void]$comboboxAlarmMinutes.Items.Add("52")
	[void]$comboboxAlarmMinutes.Items.Add("53")
	[void]$comboboxAlarmMinutes.Items.Add("54")
	[void]$comboboxAlarmMinutes.Items.Add("55")
	[void]$comboboxAlarmMinutes.Items.Add("56")
	[void]$comboboxAlarmMinutes.Items.Add("57")
	[void]$comboboxAlarmMinutes.Items.Add("58")
	[void]$comboboxAlarmMinutes.Items.Add("59")
	$comboboxAlarmMinutes.Location = '105, 19'
	$comboboxAlarmMinutes.Name = "comboboxAlarmMinutes"
	$comboboxAlarmMinutes.Size = '77, 21'
	$comboboxAlarmMinutes.TabIndex = 5
	$comboboxAlarmMinutes.add_SelectedIndexChanged($comboboxAlarmMinutes_SelectedIndexChanged)
	#
	# comboboxAlarmHour
	#
	$comboboxAlarmHour.DropDownStyle = 'DropDownList'
	$comboboxAlarmHour.FormattingEnabled = $True
	$comboboxAlarmHour.Location = '15, 19'
	$comboboxAlarmHour.Name = "comboboxAlarmHour"
	$comboboxAlarmHour.Size = '84, 21'
	$comboboxAlarmHour.TabIndex = 4
	#
	# labelAlarm
	#
	$labelAlarm.Font = "Microsoft Sans Serif, 12pt"
	$labelAlarm.Location = '60, 167'
	$labelAlarm.Name = "labelAlarm"
	$labelAlarm.Size = '70, 20'
	$labelAlarm.TabIndex = 3
	$labelAlarm.Text = "Alarm"
	$labelAlarm.TextAlign = 'MiddleRight'
	$labelAlarm.add_Click($labelAlarm_Click)
	#
	# LabelTime
	#
	$LabelTime.BorderStyle = 'FixedSingle'
	$LabelTime.FlatStyle = 'Flat'
	$LabelTime.Font = "Century, 27.75pt"
	$LabelTime.Location = '136, 9'
	$LabelTime.Name = "LabelTime"
	$LabelTime.Size = '303, 135'
	$LabelTime.TabIndex = 0
	$LabelTime.TextAlign = 'MiddleCenter'
	#
	# timerClock
	#
	$timerClock.Enabled = $True
	$timerClock.Interval = 1000
	$timerClock.add_Tick($timerClock_Tick)
	$groupboxSetAlarm.ResumeLayout()
	$groupboxSettings.ResumeLayout()
	$groupboxMisc.ResumeLayout()
	$formCCApp.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formCCApp.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formCCApp.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formCCApp.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formCCApp.ShowDialog()

} #End Function

#Call the form
Call-ClockApp_psf | Out-Null
